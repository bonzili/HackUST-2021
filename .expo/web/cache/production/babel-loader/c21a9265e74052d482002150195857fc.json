{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useCallback,useEffect,useState}from'react';import{askAsync,getAsync}from\"./Permissions\";export function usePermissions(type){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var _useState=useState(),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _options$ask=options.ask,ask=_options$ask===void 0?false:_options$ask,_options$get=options.get,get=_options$get===void 0?true:_options$get;var types=Array.isArray(type)?type:[type];var askPermissions=useCallback(function(){return askAsync.apply(void 0,_toConsumableArray(types)).then(setData);},[type]);var getPermissions=useCallback(function(){return getAsync.apply(void 0,_toConsumableArray(types)).then(setData);},[type]);useEffect(function(){if(ask){askPermissions();}if(!ask&&get){getPermissions();}},[ask,askPermissions,get,getPermissions]);return[data,askPermissions,getPermissions];}","map":{"version":3,"sources":["../src/PermissionsHooks.ts"],"names":[],"mappings":"0IAAA,OAAS,WAAT,CAAsB,SAAtB,CAAiC,QAAjC,KAAiD,OAAjD,CAEA,OAAS,QAAT,CAAmB,QAAnB,qBAmBA,MAAM,SAAU,CAAA,cAAV,CACJ,IADI,CAE4B,IAAhC,CAAA,OAAgC,2DAAF,EAAE,eAER,QAAQ,EAFA,wCAEzB,IAFyB,eAEnB,OAFmB,gCAGI,OAHJ,CAGxB,GAHwB,CAGxB,GAHwB,uBAGlB,KAHkB,2BAGI,OAHJ,CAGX,GAHW,CAGX,GAHW,uBAGL,IAHK,cAIhC,GAAM,CAAA,KAAK,CAAG,KAAK,CAAC,OAAN,CAAc,IAAd,EAAsB,IAAtB,CAA6B,CAAC,IAAD,CAA3C,CAMA,GAAM,CAAA,cAAc,CAAG,WAAW,CAAC,iBAAM,CAAA,QAAQ,MAAR,2BAAY,KAAZ,GAAmB,IAAnB,CAAwB,OAAxB,CAAN,EAAD,CAAyC,CAAC,IAAD,CAAzC,CAAlC,CAEA,GAAM,CAAA,cAAc,CAAG,WAAW,CAAC,iBAAM,CAAA,QAAQ,MAAR,2BAAY,KAAZ,GAAmB,IAAnB,CAAwB,OAAxB,CAAN,EAAD,CAAyC,CAAC,IAAD,CAAzC,CAAlC,CAEA,SAAS,CAAC,UAAK,CACb,GAAI,GAAJ,CAAS,CACP,cAAc,GACf,CAED,GAAI,CAAC,GAAD,EAAQ,GAAZ,CAAiB,CACf,cAAc,GACf,CACF,CARQ,CAQN,CAAC,GAAD,CAAM,cAAN,CAAsB,GAAtB,CAA2B,cAA3B,CARM,CAAT,CAUA,MAAO,CAAC,IAAD,CAAO,cAAP,CAAuB,cAAvB,CAAP,CACD","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nimport { askAsync, getAsync } from './Permissions';\nimport { PermissionResponse, PermissionType } from './Permissions.types';\n\n/**\n * Get or ask permission for protected functionality within the app.\n * It returns the permission response after fetching or asking it.\n * The hook fetches the permissions when rendered, by default.\n * To ask the user permission, use the `askPermission` callback or `ask` option.\n *\n * @see https://docs.expo.io/versions/latest/sdk/permissions/\n * @example\n * ```tsx\n * const [permission, askPermission, getPermission] = usePermissions(Permissions.CAMERA);\n *\n * return permission?.granted\n *   ? <Camera ... />\n *   : <Button onPress={askPermission} />;\n * ```\n */\nexport function usePermissions(\n  type: PermissionType | PermissionType[],\n  options: PermissionsOptions = {}\n): [PermissionResponse | undefined, () => Promise<void>, () => Promise<void>] {\n  const [data, setData] = useState<PermissionResponse>();\n  const { ask = false, get = true } = options;\n  const types = Array.isArray(type) ? type : [type];\n\n  // note: its intentional to listen to `type`, not `types`.\n  // when `type` is casted to an array, it possible creates a new one on every render.\n  // to prevent unnecessary function instances we need to listen to the \"raw\" value.\n\n  const askPermissions = useCallback(() => askAsync(...types).then(setData), [type]);\n\n  const getPermissions = useCallback(() => getAsync(...types).then(setData), [type]);\n\n  useEffect(() => {\n    if (ask) {\n      askPermissions();\n    }\n\n    if (!ask && get) {\n      getPermissions();\n    }\n  }, [ask, askPermissions, get, getPermissions]);\n\n  return [data, askPermissions, getPermissions];\n}\n\nexport interface PermissionsOptions {\n  /** If it should ask the permissions when mounted, defaults to `false` */\n  ask?: boolean;\n  /** If it should fetch information about the permissions when mounted, defaults to `true` */\n  get?: boolean;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}