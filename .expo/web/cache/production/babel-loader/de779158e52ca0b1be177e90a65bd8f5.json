{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import{GiftedChat}from'react-native-gifted-chat';var BOT_USER={_id:2,name:'Memo',avatar:'https://i.imgur.com/7k12EPD.png'};var fetch=require('node-fetch');var App=function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={messages:[{_id:1,text:\"Hi, I am Memo. I am your memory keeper in the Memory By Memory App. Please start by saying hi.\",createdAt:new Date(),user:BOT_USER}],maintext:\"testing\"};_this.counter=1;_this.random_user_id=Math.floor(Math.random()*10000000000).toString();return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){}},{key:\"handleResponse\",value:function handleResponse(result){var text=result;this.sendBotResponse(text);this.counter+=1;}},{key:\"requestQuery\",value:function requestQuery(query,count){var _this2=this;;fetch('http://23.21.182.147:8001/text/',{method:'post',headers:{'Accept':'application/json, text/plain, */*','Content-Type':'application/json'},body:JSON.stringify({user_id:this.random_user_id,count:count,text:query})}).then(function(res){return res.json();}).then(function(res){return _this2.handleResponse(res);});}},{key:\"onSend\",value:function onSend(){var messages=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];this.setState(function(previousState){return{messages:GiftedChat.append(previousState.messages,messages)};});var message=messages[0].text;var text___=this.requestQuery(message,this.counter);console.log(93);console.log(text___);}},{key:\"sendBotResponse\",value:function sendBotResponse(text){var msg={_id:this.state.messages.length+1,text:text,createdAt:new Date(),user:BOT_USER};this.setState(function(previousState){return{messages:GiftedChat.append(previousState.messages,[msg])};});}},{key:\"render\",value:function render(){var _this3=this;return React.createElement(View,{style:{flex:1,backgroundColor:'#fff'}},React.createElement(GiftedChat,{messages:this.state.messages,onSend:function onSend(messages){return _this3.onSend(messages);},user:{_id:1}}));}}]);return App;}(React.Component);var _Dimensions$get=Dimensions.get('window'),DEVICE_WIDTH=_Dimensions$get.width,DEVICE_HEIGHT=_Dimensions$get.height;var BACKGROUND_COLOR='#FFFDE9';var styles=StyleSheet.create({emptyContainer:{alignSelf:'stretch',backgroundColor:BACKGROUND_COLOR},container:{flex:1,flexDirection:'column',justifyContent:'space-between',alignItems:'center',alignSelf:'stretch',backgroundColor:BACKGROUND_COLOR,minHeight:DEVICE_HEIGHT,maxHeight:DEVICE_HEIGHT}});export default App;","map":{"version":3,"sources":["C:/Users/bonzi/Downloads/HackUST-2021/src/JustChat.js"],"names":["React","Component","GiftedChat","BOT_USER","_id","name","avatar","fetch","require","App","state","messages","text","createdAt","Date","user","maintext","counter","random_user_id","Math","floor","random","toString","result","sendBotResponse","query","count","method","headers","body","JSON","stringify","user_id","then","res","json","handleResponse","setState","previousState","append","message","text___","requestQuery","console","log","msg","length","flex","backgroundColor","onSend","Dimensions","get","DEVICE_WIDTH","width","DEVICE_HEIGHT","height","BACKGROUND_COLOR","styles","StyleSheet","create","emptyContainer","alignSelf","container","flexDirection","justifyContent","alignItems","minHeight","maxHeight"],"mappings":"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","sourcesContent":["import React, {\r\n    Component\r\n} from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    Dimensions,\r\n} from 'react-native';\r\nimport {\r\n    GiftedChat\r\n} from 'react-native-gifted-chat';\r\n\r\n\r\nconst BOT_USER = {\r\n    _id: 2,\r\n    name: 'Memo',\r\n    avatar: 'https://i.imgur.com/7k12EPD.png'\r\n};\r\n\r\nconst fetch = require('node-fetch');\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        messages: [{\r\n            _id: 1,\r\n            text: `Hi, I am Memo. I am your memory keeper in the Memory By Memory App. Please start by saying hi.`,\r\n            createdAt: new Date(),\r\n            user: BOT_USER\r\n        }] , maintext: \"testing\",\r\n    };\r\n\r\n    counter = 1;\r\n    random_user_id = Math.floor(Math.random() * 10000000000).toString();\r\n\r\n    componentDidMount() {\r\n        // Dialogflow_V2.setConfiguration(\r\n        //   dialogflowConfig.client_email,\r\n        //   dialogflowConfig.private_key,\r\n        //   Dialogflow_V2.LANG_ENGLISH_US,\r\n        //   dialogflowConfig.project_id\r\n        // );\r\n    };\r\n\r\n    handleResponse(result) {\r\n        let text = result;\r\n        this.sendBotResponse(text);\r\n        this.counter += 1;\r\n    };\r\n\r\n\r\n\r\n    requestQuery(query , count){;\r\n        fetch('http://23.21.182.147:8001/text/', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({user_id: this.random_user_id, count: count, text: query})\r\n        }).then(res => res.json())\r\n            .then(res => this.handleResponse(res));\r\n\r\n    };\r\n\r\n\r\n    onSend(messages = []) {\r\n        this.setState(previousState => ({\r\n            messages: GiftedChat.append(previousState.messages, messages)\r\n        }));\r\n\r\n        let message = messages[0].text;\r\n        // Dialogflow_V2.requestQuery(\r\n        //   message,\r\n        //   result => this.handleGoogleResponse(result),\r\n        //   error => console.log(error)\r\n        // );\r\n\r\n        var text___ = this.requestQuery(message, this.counter);\r\n        console.log(93);\r\n        console.log(text___);\r\n\r\n    }\r\n\r\n    sendBotResponse(text) {\r\n        let msg = {\r\n            _id: this.state.messages.length + 1,\r\n            text,\r\n            createdAt: new Date(),\r\n            user: BOT_USER\r\n        };\r\n\r\n        this.setState(previousState => ({\r\n            messages: GiftedChat.append(previousState.messages, [msg])\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={{flex: 1,backgroundColor: '#fff'}} >\r\n                <GiftedChat messages = {this.state.messages} onSend = {messages => this.onSend(messages)}\r\n                            user={{ _id: 1 }} />\r\n            </View>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst { width: DEVICE_WIDTH, height: DEVICE_HEIGHT } = Dimensions.get('window');\r\nconst BACKGROUND_COLOR = '#FFFDE9';\r\n\r\nconst styles = StyleSheet.create({\r\n    emptyContainer: {\r\n        alignSelf: 'stretch',\r\n        backgroundColor: BACKGROUND_COLOR,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        alignSelf: 'stretch',\r\n        backgroundColor: BACKGROUND_COLOR,\r\n        minHeight: DEVICE_HEIGHT,\r\n        maxHeight: DEVICE_HEIGHT,\r\n    },\r\n});\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}