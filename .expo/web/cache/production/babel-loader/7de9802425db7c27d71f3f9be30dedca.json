{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React from'react';import deepmerge from'deepmerge';import colors from\"./colors\";import darkColors from\"./colorsDark\";export var ThemeContext=React.createContext({theme:{colors:colors}});var ThemeProvider=function(_React$Component){_inherits(ThemeProvider,_React$Component);var _super=_createSuper(ThemeProvider);function ThemeProvider(props){var _this;_classCallCheck(this,ThemeProvider);_this=_super.call(this,props);_this.updateTheme=function(updates){_this.setState(function(_ref){var theme=_ref.theme;return{theme:deepmerge(theme,updates)};});};_this.replaceTheme=function(theme){_this.setState(function(){return{theme:deepmerge(_this.defaultTheme,theme)};});};_this.getTheme=function(){return _this.state.theme;};var defaultColors=props.useDark?darkColors:colors;_this.defaultTheme=deepmerge({colors:defaultColors},props.theme);_this.state={theme:_this.defaultTheme,useDark:props.useDark};return _this;}_createClass(ThemeProvider,[{key:\"render\",value:function render(){return React.createElement(ThemeContext.Provider,{value:{theme:this.state.theme,updateTheme:this.updateTheme,replaceTheme:this.replaceTheme}},this.props.children);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){var useDark=props.useDark;if(useDark!==state.useDark){var defaultColors=useDark?darkColors:colors;return{theme:deepmerge(state.theme,deepmerge({colors:defaultColors},props.theme)),useDark:useDark};}return null;}}]);return ThemeProvider;}(React.Component);export{ThemeProvider as default};ThemeProvider.defaultProps={theme:{},useDark:false};export var ThemeConsumer=ThemeContext.Consumer;","map":{"version":3,"sources":["C:/Users/bonzi/Downloads/HackUST-2021/node_modules/react-native-elements/dist/config/ThemeProvider.js"],"names":["React","deepmerge","colors","darkColors","ThemeContext","createContext","theme","ThemeProvider","props","updateTheme","updates","setState","replaceTheme","defaultTheme","getTheme","state","defaultColors","useDark","children","Component","defaultProps","ThemeConsumer","Consumer"],"mappings":"qgCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CACA,MAAOC,CAAAA,MAAP,gBACA,MAAOC,CAAAA,UAAP,oBACA,MAAO,IAAMC,CAAAA,YAAY,CAAGJ,KAAK,CAACK,aAAN,CAAoB,CAC5CC,KAAK,CAAE,CACHJ,MAAM,CAANA,MADG,CADqC,CAApB,CAArB,C,GAKcK,CAAAA,a,6GACjB,uBAAYC,KAAZ,CAAmB,+CACf,uBAAMA,KAAN,EACA,MAAKC,WAAL,CAAmB,SAACC,OAAD,CAAa,CAC5B,MAAKC,QAAL,CAAc,kBAAGL,CAAAA,KAAH,MAAGA,KAAH,OAAgB,CAC1BA,KAAK,CAAEL,SAAS,CAACK,KAAD,CAAQI,OAAR,CADU,CAAhB,EAAd,EAGH,CAJD,CAKA,MAAKE,YAAL,CAAoB,SAACN,KAAD,CAAW,CAC3B,MAAKK,QAAL,CAAc,iBAAO,CACjBL,KAAK,CAAEL,SAAS,CAAC,MAAKY,YAAN,CAAoBP,KAApB,CADC,CAAP,EAAd,EAGH,CAJD,CAKA,MAAKQ,QAAL,CAAgB,iBAAM,OAAKC,KAAL,CAAWT,KAAjB,EAAhB,CACA,GAAMU,CAAAA,aAAa,CAAGR,KAAK,CAACS,OAAN,CAAgBd,UAAhB,CAA6BD,MAAnD,CACA,MAAKW,YAAL,CAAoBZ,SAAS,CAAC,CAC1BC,MAAM,CAAEc,aADkB,CAAD,CAE1BR,KAAK,CAACF,KAFoB,CAA7B,CAGA,MAAKS,KAAL,CAAa,CACTT,KAAK,CAAE,MAAKO,YADH,CAETI,OAAO,CAAET,KAAK,CAACS,OAFN,CAAb,CAjBe,aAqBlB,C,gDAcD,iBAAS,CACL,MAAQ,qBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAC9BX,KAAK,CAAE,KAAKS,KAAL,CAAWT,KADY,CAE9BG,WAAW,CAAE,KAAKA,WAFY,CAG9BG,YAAY,CAAE,KAAKA,YAHW,CAA9B,EAKP,KAAKJ,KAAL,CAAWU,QALJ,CAAR,CAOH,C,0CArBD,kCAAgCV,KAAhC,CAAuCO,KAAvC,CAA8C,IAClCE,CAAAA,OADkC,CACtBT,KADsB,CAClCS,OADkC,CAE1C,GAAIA,OAAO,GAAKF,KAAK,CAACE,OAAtB,CAA+B,CAC3B,GAAMD,CAAAA,aAAa,CAAGC,OAAO,CAAGd,UAAH,CAAgBD,MAA7C,CACA,MAAO,CACHI,KAAK,CAAEL,SAAS,CAACc,KAAK,CAACT,KAAP,CAAcL,SAAS,CAAC,CACpCC,MAAM,CAAEc,aAD4B,CAAD,CAEpCR,KAAK,CAACF,KAF8B,CAAvB,CADb,CAIHW,OAAO,CAAPA,OAJG,CAAP,CAMH,CACD,MAAO,KAAP,CACH,C,2BAnCsCjB,KAAK,CAACmB,S,SAA5BZ,a,aA8CrBA,aAAa,CAACa,YAAd,CAA6B,CACzBd,KAAK,CAAE,EADkB,CAEzBW,OAAO,CAAE,KAFgB,CAA7B,CAIA,MAAO,IAAMI,CAAAA,aAAa,CAAGjB,YAAY,CAACkB,QAAnC","sourcesContent":["import React from 'react';\nimport deepmerge from 'deepmerge';\nimport colors from './colors';\nimport darkColors from './colorsDark';\nexport const ThemeContext = React.createContext({\n    theme: {\n        colors,\n    },\n});\nexport default class ThemeProvider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updateTheme = (updates) => {\n            this.setState(({ theme }) => ({\n                theme: deepmerge(theme, updates),\n            }));\n        };\n        this.replaceTheme = (theme) => {\n            this.setState(() => ({\n                theme: deepmerge(this.defaultTheme, theme),\n            }));\n        };\n        this.getTheme = () => this.state.theme;\n        const defaultColors = props.useDark ? darkColors : colors;\n        this.defaultTheme = deepmerge({\n            colors: defaultColors,\n        }, props.theme);\n        this.state = {\n            theme: this.defaultTheme,\n            useDark: props.useDark,\n        };\n    }\n    static getDerivedStateFromProps(props, state) {\n        const { useDark } = props;\n        if (useDark !== state.useDark) {\n            const defaultColors = useDark ? darkColors : colors;\n            return {\n                theme: deepmerge(state.theme, deepmerge({\n                    colors: defaultColors,\n                }, props.theme)),\n                useDark,\n            };\n        }\n        return null;\n    }\n    render() {\n        return (<ThemeContext.Provider value={{\n                theme: this.state.theme,\n                updateTheme: this.updateTheme,\n                replaceTheme: this.replaceTheme,\n            }}>\n        {this.props.children}\n      </ThemeContext.Provider>);\n    }\n}\nThemeProvider.defaultProps = {\n    theme: {},\n    useDark: false,\n};\nexport const ThemeConsumer = ThemeContext.Consumer;\n"]},"metadata":{},"sourceType":"module"}