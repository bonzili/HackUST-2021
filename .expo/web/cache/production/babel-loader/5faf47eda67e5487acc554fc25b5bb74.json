{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}var __rest=this&&this.__rest||function(s,e){var t={};for(var p in s){if(Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0)t[p]=s[p];}if(s!=null&&typeof Object.getOwnPropertySymbols===\"function\")for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++){if(e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i]))t[p[i]]=s[p[i]];}return t;};import React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import Platform from\"react-native-web/dist/exports/Platform\";import{withTheme}from\"../config\";var TRACK_SIZE=4;var THUMB_SIZE=40;var TRACK_STYLE=Platform.select({web:0,default:-1});var DEFAULT_ANIMATION_CONFIGS={spring:{friction:7,tension:100,useNativeDriver:false},timing:{duration:150,easing:Easing.inOut(Easing.ease),delay:0,useNativeDriver:false}};var getBoundedValue=function getBoundedValue(value,maximumValue,minimumValue){return Math.max(Math.min(value,maximumValue),minimumValue);};var Rect=function(){function Rect(x,y,width,height){_classCallCheck(this,Rect);this.x=x;this.y=y;this.width=width;this.height=height;}_createClass(Rect,[{key:\"containsPoint\",value:function containsPoint(x,y){return x>=this.x&&y>=this.y&&x<=this.x+this.width&&y<=this.y+this.height;}}]);return Rect;}();var Slider=function(_React$Component){_inherits(Slider,_React$Component);var _super=_createSuper(Slider);function Slider(props){var _this;_classCallCheck(this,Slider);_this=_super.call(this,props);_this.measureContainer=function(x){_this.handleMeasure('containerSize',x);};_this.measureTrack=function(x){_this.handleMeasure('trackSize',x);};_this.measureThumb=function(x){_this.handleMeasure('thumbSize',x);};_this.state={containerSize:{width:0,height:0},trackSize:{width:0,height:0},thumbSize:{width:0,height:0},allMeasured:false,value:new Animated.Value(getBoundedValue(props.value,props.maximumValue,props.minimumValue))};_this.panResponder=PanResponder.create({onStartShouldSetPanResponder:_this.handleStartShouldSetPanResponder.bind(_assertThisInitialized(_this)),onMoveShouldSetPanResponder:_this.handleMoveShouldSetPanResponder.bind(_assertThisInitialized(_this)),onPanResponderGrant:_this.handlePanResponderGrant.bind(_assertThisInitialized(_this)),onPanResponderMove:_this.handlePanResponderMove.bind(_assertThisInitialized(_this)),onPanResponderRelease:_this.handlePanResponderEnd.bind(_assertThisInitialized(_this)),onPanResponderTerminationRequest:_this.handlePanResponderRequestEnd.bind(_assertThisInitialized(_this)),onPanResponderTerminate:_this.handlePanResponderEnd.bind(_assertThisInitialized(_this))});_this.isVertical=props.orientation==='vertical';_this.componentDidUpdate(props,true);return _this;}_createClass(Slider,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,force){var newValue=getBoundedValue(this.props.value,this.props.maximumValue,this.props.minimumValue);if(prevProps.value!==newValue||force){if(this.props.animateTransitions){this.setCurrentValueAnimated(newValue);}else{this.setCurrentValue(newValue);}}}},{key:\"setCurrentValue\",value:function setCurrentValue(value){this.state.value.setValue(value);}},{key:\"setCurrentValueAnimated\",value:function setCurrentValueAnimated(value){var animationType=this.props.animationType;var animationConfig=_extends({},DEFAULT_ANIMATION_CONFIGS[animationType],this.props.animationConfig,{toValue:value});Animated[animationType](this.state.value,animationConfig).start();}},{key:\"handleMoveShouldSetPanResponder\",value:function handleMoveShouldSetPanResponder(){if(!TRACK_STYLE){return true;}return false;}},{key:\"handlePanResponderGrant\",value:function handlePanResponderGrant(){this._previousLeft=this.getThumbLeft(this.getCurrentValue());this.fireChangeEvent('onSlidingStart');}},{key:\"handlePanResponderMove\",value:function handlePanResponderMove(_,gestureState){if(this.props.disabled){return;}this.setCurrentValue(this.getValue(gestureState));this.fireChangeEvent('onValueChange');}},{key:\"handlePanResponderRequestEnd\",value:function handlePanResponderRequestEnd(){return false;}},{key:\"handlePanResponderEnd\",value:function handlePanResponderEnd(_,gestureState){if(this.props.disabled){return;}this.setCurrentValue(this.getValue(gestureState));this.fireChangeEvent('onSlidingComplete');}},{key:\"thumbHitTest\",value:function thumbHitTest(_ref){var nativeEvent=_ref.nativeEvent;var thumbTouchRect=this.getThumbTouchRect();return thumbTouchRect.containsPoint(nativeEvent.locationX,nativeEvent.locationY);}},{key:\"handleStartShouldSetPanResponder\",value:function handleStartShouldSetPanResponder(e){if(!this.props.allowTouchTrack){return this.thumbHitTest(e);}this.setCurrentValue(this.getOnTouchValue(e));this.fireChangeEvent('onValueChange');return true;}},{key:\"fireChangeEvent\",value:function fireChangeEvent(event){if(this.props[event]){this.props[event](this.getCurrentValue());}}},{key:\"getOnTouchValue\",value:function getOnTouchValue(_ref2){var nativeEvent=_ref2.nativeEvent;var location=this.isVertical?nativeEvent.locationY:nativeEvent.locationX;return this.getValueForTouch(location);}},{key:\"getValueForTouch\",value:function getValueForTouch(location){var length=this.state.containerSize.width-this.state.thumbSize.width;var ratio=location/length;var newValue=ratio*(this.props.maximumValue-this.props.minimumValue);if(this.props.step){newValue=Math.round(newValue/this.props.step)*this.props.step;}return getBoundedValue(newValue+this.props.minimumValue,this.props.maximumValue,this.props.minimumValue);}},{key:\"getTouchOverflowSize\",value:function getTouchOverflowSize(){var _this$state=this.state,thumbSize=_this$state.thumbSize,allMeasured=_this$state.allMeasured,containerSize=_this$state.containerSize;var thumbTouchSize=this.props.thumbTouchSize;var size={};if(allMeasured===true){size.width=Math.max(0,thumbTouchSize.width-thumbSize.width);size.height=Math.max(0,thumbTouchSize.height-containerSize.height);}return size;}},{key:\"getTouchOverflowStyle\",value:function getTouchOverflowStyle(){var _this$getTouchOverflo=this.getTouchOverflowSize(),width=_this$getTouchOverflo.width,height=_this$getTouchOverflo.height;var touchOverflowStyle={};if(width!==undefined&&height!==undefined){var verticalMargin=-height/2;touchOverflowStyle.marginTop=verticalMargin;touchOverflowStyle.marginBottom=verticalMargin;var horizontalMargin=-width/2;touchOverflowStyle.marginLeft=horizontalMargin;touchOverflowStyle.marginRight=horizontalMargin;}if(this.props.debugTouchArea===true){touchOverflowStyle.backgroundColor='orange';touchOverflowStyle.opacity=0.5;}return touchOverflowStyle;}},{key:\"handleMeasure\",value:function handleMeasure(name,x){var _x$nativeEvent$layout=x.nativeEvent.layout,layoutWidth=_x$nativeEvent$layout.width,layoutHeight=_x$nativeEvent$layout.height;var width=this.isVertical?layoutHeight:layoutWidth;var height=this.isVertical?layoutWidth:layoutHeight;var size={width:width,height:height};var storeName=\"_\"+name;var currentSize=this[storeName];if(currentSize&&width===currentSize.width&&height===currentSize.height){return;}this[storeName]=size;if(this._containerSize&&this._trackSize&&this._thumbSize){this.setState({containerSize:this._containerSize,trackSize:this._trackSize,thumbSize:this._thumbSize,allMeasured:true});}}},{key:\"getValue\",value:function getValue(gestureState){var location=this._previousLeft+(this.isVertical?gestureState.dy:gestureState.dx);return this.getValueForTouch(location);}},{key:\"getCurrentValue\",value:function getCurrentValue(){return this.state.value.__getValue();}},{key:\"getRatio\",value:function getRatio(value){return(value-this.props.minimumValue)/(this.props.maximumValue-this.props.minimumValue);}},{key:\"getThumbLeft\",value:function getThumbLeft(value){var ratio=this.getRatio(value);return ratio*(this.state.containerSize.width-this.state.thumbSize.width);}},{key:\"getThumbTouchRect\",value:function getThumbTouchRect(){var _this$state2=this.state,thumbSize=_this$state2.thumbSize,containerSize=_this$state2.containerSize;var thumbTouchSize=this.props.thumbTouchSize;var touchOverflowSize=this.getTouchOverflowSize();var height=touchOverflowSize.height/2+(containerSize.height-thumbTouchSize.height)/2;var width=touchOverflowSize.width/2+this.getThumbLeft(this.getCurrentValue())+(thumbSize.width-thumbTouchSize.width)/2;if(this.isVertical){return new Rect(height,width,thumbTouchSize.width,thumbTouchSize.height);}return new Rect(width,height,thumbTouchSize.width,thumbTouchSize.height);}},{key:\"renderDebugThumbTouchRect\",value:function renderDebugThumbTouchRect(thumbLeft){var thumbTouchRect=this.getThumbTouchRect();var positionStyle={left:thumbLeft,top:thumbTouchRect.y,width:thumbTouchRect.width,height:thumbTouchRect.height};return React.createElement(Animated.View,{style:positionStyle,pointerEvents:\"none\"});}},{key:\"getMinimumTrackStyles\",value:function getMinimumTrackStyles(thumbStart){var _this$state3=this.state,thumbSize=_this$state3.thumbSize,trackSize=_this$state3.trackSize;var minimumTrackStyle={position:'absolute'};if(this.isVertical){minimumTrackStyle.height=Animated.add(thumbStart,thumbSize.height/2);minimumTrackStyle.marginLeft=trackSize.width*TRACK_STYLE;}else{minimumTrackStyle.width=Animated.add(thumbStart,thumbSize.width/2);minimumTrackStyle.marginTop=trackSize.height*TRACK_STYLE;}return minimumTrackStyle;}},{key:\"getThumbPositionStyles\",value:function getThumbPositionStyles(thumbStart){return[_defineProperty({},this.isVertical?'translateY':'translateX',thumbStart)];}},{key:\"render\",value:function render(){var _a=this.props,minimumValue=_a.minimumValue,maximumValue=_a.maximumValue,minimumTrackTintColor=_a.minimumTrackTintColor,maximumTrackTintColor=_a.maximumTrackTintColor,thumbTintColor=_a.thumbTintColor,containerStyle=_a.containerStyle,style=_a.style,trackStyle=_a.trackStyle,thumbStyle=_a.thumbStyle,thumbProps=_a.thumbProps,debugTouchArea=_a.debugTouchArea,other=__rest(_a,[\"minimumValue\",\"maximumValue\",\"minimumTrackTintColor\",\"maximumTrackTintColor\",\"thumbTintColor\",\"containerStyle\",\"style\",\"trackStyle\",\"thumbStyle\",\"thumbProps\",\"debugTouchArea\"]);var _this$state4=this.state,value=_this$state4.value,containerSize=_this$state4.containerSize,thumbSize=_this$state4.thumbSize,allMeasured=_this$state4.allMeasured;var mainStyles=containerStyle||styles;var appliedTrackStyle=StyleSheet.flatten([styles.track,trackStyle]);var thumbStart=value.interpolate({inputRange:[minimumValue,maximumValue],outputRange:[0,containerSize.width-thumbSize.width]});var valueVisibleStyle={};if(!allMeasured){valueVisibleStyle.height=0;valueVisibleStyle.width=0;}var minimumTrackStyle=_extends(_extends(_extends({},this.getMinimumTrackStyles(thumbStart)),{backgroundColor:minimumTrackTintColor}),valueVisibleStyle);var touchOverflowStyle=this.getTouchOverflowStyle();return React.createElement(View,_extends({},other,{style:StyleSheet.flatten([this.isVertical?mainStyles.containerVertical:mainStyles.containerHorizontal,style]),onLayout:this.measureContainer}),React.createElement(View,{style:StyleSheet.flatten([mainStyles.track,this.isVertical?mainStyles.trackVertical:mainStyles.trackHorizontal,appliedTrackStyle,{backgroundColor:maximumTrackTintColor}]),onLayout:this.measureTrack}),React.createElement(Animated.View,{style:StyleSheet.flatten([mainStyles.track,this.isVertical?mainStyles.trackVertical:mainStyles.trackHorizontal,appliedTrackStyle,minimumTrackStyle])}),React.createElement(SliderThumb,_extends({isVisible:allMeasured,onLayout:this.measureThumb.bind(this),style:thumbStyle,color:thumbTintColor,start:thumbStart,vertical:this.isVertical},thumbProps)),React.createElement(View,_extends({style:StyleSheet.flatten([styles.touchArea,touchOverflowStyle])},this.panResponder.panHandlers),debugTouchArea===true&&this.renderDebugThumbTouchRect(thumbStart)));}}]);return Slider;}(React.Component);var SliderThumb=function SliderThumb(_a){var Component=_a.Component,isVisible=_a.isVisible,onLayout=_a.onLayout,style=_a.style,start=_a.start,color=_a.color,vertical=_a.vertical,props=__rest(_a,[\"Component\",\"isVisible\",\"onLayout\",\"style\",\"start\",\"color\",\"vertical\"]);var ThumbComponent=Component||Animated.View;var axis=vertical?'translateY':'translateX';var thumbPosition=[_defineProperty({},axis,start)];var styleTransform=style&&style.transform||[];var visibleStyle=isVisible?{}:{height:0,width:0};return React.createElement(ThumbComponent,_extends({testID:\"sliderThumb\",onLayout:onLayout,style:StyleSheet.flatten([_extends({backgroundColor:color,transform:[].concat(thumbPosition,_toConsumableArray(styleTransform))},visibleStyle),styles.thumb,style])},props));};Slider.defaultProps={value:0,minimumValue:0,maximumValue:1,step:0,minimumTrackTintColor:'#3f3f3f',maximumTrackTintColor:'#b3b3b3',allowTouchTrack:false,thumbTintColor:'red',thumbTouchSize:{width:THUMB_SIZE,height:THUMB_SIZE},debugTouchArea:false,animationType:'timing',orientation:'horizontal'};var styles=StyleSheet.create({containerHorizontal:{height:40,justifyContent:'center'},containerVertical:{width:40,flexDirection:'column',alignItems:'center'},track:{borderRadius:TRACK_SIZE/2},trackHorizontal:{height:TRACK_SIZE},trackVertical:{flex:1,width:TRACK_SIZE},thumb:{position:'absolute',width:THUMB_SIZE,height:THUMB_SIZE,borderRadius:THUMB_SIZE/2},touchArea:{position:'absolute',backgroundColor:'transparent',top:0,left:0,right:0,bottom:0},debugThumbTouchArea:{position:'absolute',backgroundColor:'green',opacity:0.5}});export{Slider};export default withTheme(Slider,'Slider');","map":{"version":3,"sources":["C:/Users/bonzi/Downloads/HackUST-2021/node_modules/react-native-elements/dist/slider/Slider.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","withTheme","TRACK_SIZE","THUMB_SIZE","TRACK_STYLE","Platform","select","web","default","DEFAULT_ANIMATION_CONFIGS","spring","friction","tension","useNativeDriver","timing","duration","easing","Easing","inOut","ease","delay","getBoundedValue","value","maximumValue","minimumValue","Math","max","min","Rect","x","y","width","height","Slider","props","measureContainer","handleMeasure","measureTrack","measureThumb","state","containerSize","trackSize","thumbSize","allMeasured","Animated","Value","panResponder","PanResponder","create","onStartShouldSetPanResponder","handleStartShouldSetPanResponder","bind","onMoveShouldSetPanResponder","handleMoveShouldSetPanResponder","onPanResponderGrant","handlePanResponderGrant","onPanResponderMove","handlePanResponderMove","onPanResponderRelease","handlePanResponderEnd","onPanResponderTerminationRequest","handlePanResponderRequestEnd","onPanResponderTerminate","isVertical","orientation","componentDidUpdate","prevProps","force","newValue","animateTransitions","setCurrentValueAnimated","setCurrentValue","setValue","animationType","animationConfig","toValue","start","_previousLeft","getThumbLeft","getCurrentValue","fireChangeEvent","_","gestureState","disabled","getValue","nativeEvent","thumbTouchRect","getThumbTouchRect","containsPoint","locationX","locationY","allowTouchTrack","thumbHitTest","getOnTouchValue","event","location","getValueForTouch","ratio","step","round","thumbTouchSize","size","getTouchOverflowSize","touchOverflowStyle","undefined","verticalMargin","marginTop","marginBottom","horizontalMargin","marginLeft","marginRight","debugTouchArea","backgroundColor","opacity","name","layout","layoutWidth","layoutHeight","storeName","currentSize","_containerSize","_trackSize","_thumbSize","setState","dy","dx","__getValue","getRatio","touchOverflowSize","thumbLeft","positionStyle","left","top","thumbStart","minimumTrackStyle","position","add","_a","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","containerStyle","style","trackStyle","thumbStyle","thumbProps","other","mainStyles","styles","appliedTrackStyle","StyleSheet","flatten","track","interpolate","inputRange","outputRange","valueVisibleStyle","getMinimumTrackStyles","getTouchOverflowStyle","containerVertical","containerHorizontal","trackVertical","trackHorizontal","touchArea","panHandlers","renderDebugThumbTouchRect","Component","SliderThumb","isVisible","onLayout","color","vertical","ThumbComponent","View","axis","thumbPosition","styleTransform","transform","visibleStyle","thumb","defaultProps","justifyContent","flexDirection","alignItems","borderRadius","flex","right","bottom","debugThumbTouchArea"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n// @ts-nocheck\nimport React from 'react';\nimport { View, StyleSheet, Animated, Easing, PanResponder, Platform, } from 'react-native';\nimport { withTheme } from '../config';\nconst TRACK_SIZE = 4;\nconst THUMB_SIZE = 40;\nconst TRACK_STYLE = Platform.select({ web: 0, default: -1 });\nconst DEFAULT_ANIMATION_CONFIGS = {\n    spring: {\n        friction: 7,\n        tension: 100,\n        useNativeDriver: false,\n    },\n    timing: {\n        duration: 150,\n        easing: Easing.inOut(Easing.ease),\n        delay: 0,\n        useNativeDriver: false,\n    },\n};\nconst getBoundedValue = (value, maximumValue, minimumValue) => Math.max(Math.min(value, maximumValue), minimumValue);\nclass Rect {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    containsPoint(x, y) {\n        return (x >= this.x &&\n            y >= this.y &&\n            x <= this.x + this.width &&\n            y <= this.y + this.height);\n    }\n}\nclass Slider extends React.Component {\n    constructor(props) {\n        super(props);\n        this.measureContainer = (x) => {\n            this.handleMeasure('containerSize', x);\n        };\n        this.measureTrack = (x) => {\n            this.handleMeasure('trackSize', x);\n        };\n        this.measureThumb = (x) => {\n            this.handleMeasure('thumbSize', x);\n        };\n        this.state = {\n            containerSize: { width: 0, height: 0 },\n            trackSize: { width: 0, height: 0 },\n            thumbSize: { width: 0, height: 0 },\n            allMeasured: false,\n            value: new Animated.Value(getBoundedValue(props.value, props.maximumValue, props.minimumValue)),\n        };\n        this.panResponder = PanResponder.create({\n            onStartShouldSetPanResponder: this.handleStartShouldSetPanResponder.bind(this),\n            onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder.bind(this),\n            onPanResponderGrant: this.handlePanResponderGrant.bind(this),\n            onPanResponderMove: this.handlePanResponderMove.bind(this),\n            onPanResponderRelease: this.handlePanResponderEnd.bind(this),\n            onPanResponderTerminationRequest: this.handlePanResponderRequestEnd.bind(this),\n            onPanResponderTerminate: this.handlePanResponderEnd.bind(this),\n        });\n        this.isVertical = props.orientation === 'vertical';\n        this.componentDidUpdate(props, true);\n    }\n    componentDidUpdate(prevProps, force) {\n        const newValue = getBoundedValue(this.props.value, this.props.maximumValue, this.props.minimumValue);\n        if (prevProps.value !== newValue || force) {\n            if (this.props.animateTransitions) {\n                this.setCurrentValueAnimated(newValue);\n            }\n            else {\n                this.setCurrentValue(newValue);\n            }\n        }\n    }\n    setCurrentValue(value) {\n        this.state.value.setValue(value);\n    }\n    setCurrentValueAnimated(value) {\n        const { animationType } = this.props;\n        const animationConfig = Object.assign({}, DEFAULT_ANIMATION_CONFIGS[animationType], this.props.animationConfig, {\n            toValue: value,\n        });\n        Animated[animationType](this.state.value, animationConfig).start();\n    }\n    handleMoveShouldSetPanResponder() {\n        // Should we become active when the user moves a touch over the thumb?\n        if (!TRACK_STYLE) {\n            return true;\n        }\n        return false;\n    }\n    handlePanResponderGrant() {\n        this._previousLeft = this.getThumbLeft(this.getCurrentValue());\n        this.fireChangeEvent('onSlidingStart');\n    }\n    handlePanResponderMove(_, gestureState) {\n        if (this.props.disabled) {\n            return;\n        }\n        this.setCurrentValue(this.getValue(gestureState));\n        this.fireChangeEvent('onValueChange');\n    }\n    handlePanResponderRequestEnd() {\n        // Should we allow another component to take over this pan?\n        return false;\n    }\n    handlePanResponderEnd(_, gestureState) {\n        if (this.props.disabled) {\n            return;\n        }\n        this.setCurrentValue(this.getValue(gestureState));\n        this.fireChangeEvent('onSlidingComplete');\n    }\n    thumbHitTest({ nativeEvent }) {\n        const thumbTouchRect = this.getThumbTouchRect();\n        return thumbTouchRect.containsPoint(nativeEvent.locationX, nativeEvent.locationY);\n    }\n    handleStartShouldSetPanResponder(e /* gestureState: Object */) {\n        // Should we become active when the user presses down on the thumb?\n        if (!this.props.allowTouchTrack) {\n            return this.thumbHitTest(e);\n        }\n        this.setCurrentValue(this.getOnTouchValue(e));\n        this.fireChangeEvent('onValueChange');\n        return true;\n    }\n    fireChangeEvent(event) {\n        if (this.props[event]) {\n            this.props[event](this.getCurrentValue());\n        }\n    }\n    // get value of where some touched on slider.\n    getOnTouchValue({ nativeEvent }) {\n        const location = this.isVertical\n            ? nativeEvent.locationY\n            : nativeEvent.locationX;\n        return this.getValueForTouch(location);\n    }\n    getValueForTouch(location) {\n        const length = this.state.containerSize.width - this.state.thumbSize.width;\n        const ratio = location / length;\n        let newValue = ratio * (this.props.maximumValue - this.props.minimumValue);\n        if (this.props.step) {\n            newValue = Math.round(newValue / this.props.step) * this.props.step;\n        }\n        return getBoundedValue(newValue + this.props.minimumValue, this.props.maximumValue, this.props.minimumValue);\n    }\n    getTouchOverflowSize() {\n        const { thumbSize, allMeasured, containerSize } = this.state;\n        const { thumbTouchSize } = this.props;\n        const size = {};\n        if (allMeasured === true) {\n            size.width = Math.max(0, thumbTouchSize.width - thumbSize.width);\n            size.height = Math.max(0, thumbTouchSize.height - containerSize.height);\n        }\n        return size;\n    }\n    getTouchOverflowStyle() {\n        const { width, height } = this.getTouchOverflowSize();\n        const touchOverflowStyle = {};\n        if (width !== undefined && height !== undefined) {\n            const verticalMargin = -height / 2;\n            touchOverflowStyle.marginTop = verticalMargin;\n            touchOverflowStyle.marginBottom = verticalMargin;\n            const horizontalMargin = -width / 2;\n            touchOverflowStyle.marginLeft = horizontalMargin;\n            touchOverflowStyle.marginRight = horizontalMargin;\n        }\n        if (this.props.debugTouchArea === true) {\n            touchOverflowStyle.backgroundColor = 'orange';\n            touchOverflowStyle.opacity = 0.5;\n        }\n        return touchOverflowStyle;\n    }\n    handleMeasure(name, x) {\n        const { width: layoutWidth, height: layoutHeight } = x.nativeEvent.layout;\n        const width = this.isVertical ? layoutHeight : layoutWidth;\n        const height = this.isVertical ? layoutWidth : layoutHeight;\n        const size = { width, height };\n        const storeName = `_${name}`;\n        const currentSize = this[storeName];\n        if (currentSize &&\n            width === currentSize.width &&\n            height === currentSize.height) {\n            return;\n        }\n        this[storeName] = size;\n        if (this._containerSize && this._trackSize && this._thumbSize) {\n            this.setState({\n                containerSize: this._containerSize,\n                trackSize: this._trackSize,\n                thumbSize: this._thumbSize,\n                allMeasured: true,\n            });\n        }\n    }\n    getValue(gestureState) {\n        const location = this._previousLeft +\n            (this.isVertical ? gestureState.dy : gestureState.dx);\n        return this.getValueForTouch(location);\n    }\n    getCurrentValue() {\n        return this.state.value.__getValue();\n    }\n    getRatio(value) {\n        return ((value - this.props.minimumValue) /\n            (this.props.maximumValue - this.props.minimumValue));\n    }\n    getThumbLeft(value) {\n        const ratio = this.getRatio(value);\n        return (ratio * (this.state.containerSize.width - this.state.thumbSize.width));\n    }\n    getThumbTouchRect() {\n        const { thumbSize, containerSize } = this.state;\n        const { thumbTouchSize } = this.props;\n        const touchOverflowSize = this.getTouchOverflowSize();\n        const height = touchOverflowSize.height / 2 +\n            (containerSize.height - thumbTouchSize.height) / 2;\n        const width = touchOverflowSize.width / 2 +\n            this.getThumbLeft(this.getCurrentValue()) +\n            (thumbSize.width - thumbTouchSize.width) / 2;\n        if (this.isVertical) {\n            return new Rect(height, width, thumbTouchSize.width, thumbTouchSize.height);\n        }\n        return new Rect(width, height, thumbTouchSize.width, thumbTouchSize.height);\n    }\n    renderDebugThumbTouchRect(thumbLeft) {\n        const thumbTouchRect = this.getThumbTouchRect();\n        const positionStyle = {\n            left: thumbLeft,\n            top: thumbTouchRect.y,\n            width: thumbTouchRect.width,\n            height: thumbTouchRect.height,\n        };\n        return <Animated.View style={positionStyle} pointerEvents=\"none\"/>;\n    }\n    getMinimumTrackStyles(thumbStart) {\n        const { thumbSize, trackSize } = this.state;\n        const minimumTrackStyle = {\n            position: 'absolute',\n        };\n        if (this.isVertical) {\n            minimumTrackStyle.height = Animated.add(thumbStart, thumbSize.height / 2);\n            minimumTrackStyle.marginLeft = trackSize.width * TRACK_STYLE;\n        }\n        else {\n            minimumTrackStyle.width = Animated.add(thumbStart, thumbSize.width / 2);\n            minimumTrackStyle.marginTop = trackSize.height * TRACK_STYLE;\n        }\n        return minimumTrackStyle;\n    }\n    getThumbPositionStyles(thumbStart) {\n        return [{ [this.isVertical ? 'translateY' : 'translateX']: thumbStart }];\n    }\n    render() {\n        const _a = this.props, { minimumValue, maximumValue, minimumTrackTintColor, maximumTrackTintColor, thumbTintColor, containerStyle, style, trackStyle, thumbStyle, thumbProps, debugTouchArea } = _a, other = __rest(_a, [\"minimumValue\", \"maximumValue\", \"minimumTrackTintColor\", \"maximumTrackTintColor\", \"thumbTintColor\", \"containerStyle\", \"style\", \"trackStyle\", \"thumbStyle\", \"thumbProps\", \"debugTouchArea\"]);\n        const { value, containerSize, thumbSize, allMeasured } = this.state;\n        const mainStyles = containerStyle || styles;\n        const appliedTrackStyle = StyleSheet.flatten([styles.track, trackStyle]);\n        const thumbStart = value.interpolate({\n            inputRange: [minimumValue, maximumValue],\n            outputRange: [0, containerSize.width - thumbSize.width],\n        });\n        const valueVisibleStyle = {};\n        if (!allMeasured) {\n            valueVisibleStyle.height = 0;\n            valueVisibleStyle.width = 0;\n        }\n        const minimumTrackStyle = Object.assign(Object.assign(Object.assign({}, this.getMinimumTrackStyles(thumbStart)), { backgroundColor: minimumTrackTintColor }), valueVisibleStyle);\n        const touchOverflowStyle = this.getTouchOverflowStyle();\n        return (<View {...other} style={StyleSheet.flatten([\n                this.isVertical\n                    ? mainStyles.containerVertical\n                    : mainStyles.containerHorizontal,\n                style,\n            ])} onLayout={this.measureContainer}>\n        <View style={StyleSheet.flatten([\n                mainStyles.track,\n                this.isVertical\n                    ? mainStyles.trackVertical\n                    : mainStyles.trackHorizontal,\n                appliedTrackStyle,\n                { backgroundColor: maximumTrackTintColor },\n            ])} onLayout={this.measureTrack}/>\n        <Animated.View style={StyleSheet.flatten([\n                mainStyles.track,\n                this.isVertical\n                    ? mainStyles.trackVertical\n                    : mainStyles.trackHorizontal,\n                appliedTrackStyle,\n                minimumTrackStyle,\n            ])}/>\n        <SliderThumb isVisible={allMeasured} onLayout={this.measureThumb.bind(this)} style={thumbStyle} color={thumbTintColor} start={thumbStart} vertical={this.isVertical} {...thumbProps}/>\n        <View style={StyleSheet.flatten([styles.touchArea, touchOverflowStyle])} {...this.panResponder.panHandlers}>\n          {debugTouchArea === true &&\n                this.renderDebugThumbTouchRect(thumbStart)}\n        </View>\n      </View>);\n    }\n}\nconst SliderThumb = (_a) => {\n    var { Component, isVisible, onLayout, style, start, color, vertical } = _a, props = __rest(_a, [\"Component\", \"isVisible\", \"onLayout\", \"style\", \"start\", \"color\", \"vertical\"]);\n    const ThumbComponent = Component || Animated.View;\n    const axis = vertical ? 'translateY' : 'translateX';\n    const thumbPosition = [{ [axis]: start }];\n    const styleTransform = (style && style.transform) || [];\n    const visibleStyle = isVisible ? {} : { height: 0, width: 0 };\n    return (<ThumbComponent testID=\"sliderThumb\" onLayout={onLayout} style={StyleSheet.flatten([\n            Object.assign({ backgroundColor: color, transform: [...thumbPosition, ...styleTransform] }, visibleStyle),\n            styles.thumb,\n            style,\n        ])} {...props}/>);\n};\nSlider.defaultProps = {\n    value: 0,\n    minimumValue: 0,\n    maximumValue: 1,\n    step: 0,\n    minimumTrackTintColor: '#3f3f3f',\n    maximumTrackTintColor: '#b3b3b3',\n    allowTouchTrack: false,\n    thumbTintColor: 'red',\n    thumbTouchSize: { width: THUMB_SIZE, height: THUMB_SIZE },\n    debugTouchArea: false,\n    animationType: 'timing',\n    orientation: 'horizontal',\n};\nconst styles = StyleSheet.create({\n    containerHorizontal: {\n        height: 40,\n        justifyContent: 'center',\n    },\n    containerVertical: {\n        width: 40,\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    track: {\n        borderRadius: TRACK_SIZE / 2,\n    },\n    trackHorizontal: {\n        height: TRACK_SIZE,\n    },\n    trackVertical: {\n        flex: 1,\n        width: TRACK_SIZE,\n    },\n    thumb: {\n        position: 'absolute',\n        width: THUMB_SIZE,\n        height: THUMB_SIZE,\n        borderRadius: THUMB_SIZE / 2,\n    },\n    touchArea: {\n        position: 'absolute',\n        backgroundColor: 'transparent',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    },\n    debugThumbTouchArea: {\n        position: 'absolute',\n        backgroundColor: 'green',\n        opacity: 0.5,\n    },\n});\nexport { Slider };\nexport default withTheme(Slider, 'Slider');\n"]},"metadata":{},"sourceType":"module"}