{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\bonzi\\\\Downloads\\\\HackUST-2021\\\\src\\\\JustChat.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nvar BOT_USER = {\n  _id: 2,\n  name: 'Memo',\n  avatar: 'https://i.imgur.com/7k12EPD.png'\n};\n\nvar fetch = require('node-fetch');\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      messages: [{\n        _id: 1,\n        text: \"Hi, I am Memo. I am your memory keeper in the Memory By Memory App. Please start by saying hi.\",\n        createdAt: new Date(),\n        user: BOT_USER\n      }],\n      maintext: \"testing\"\n    };\n    _this.counter = 1;\n    _this.random_user_id = Math.floor(Math.random() * 10000000000).toString();\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"handleResponse\",\n    value: function handleResponse(result) {\n      var text = result;\n      this.sendBotResponse(text);\n      this.counter += 1;\n    }\n  }, {\n    key: \"requestQuery\",\n    value: function requestQuery(query, count) {\n      var _this2 = this;\n\n      ;\n      fetch('http://23.21.182.147:8001/text/', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: this.random_user_id,\n          count: count,\n          text: query\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return _this2.handleResponse(res);\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      });\n      var message = messages[0].text;\n      var text___ = this.requestQuery(message, this.counter);\n      console.log(93);\n      console.log(text___);\n    }\n  }, {\n    key: \"sendBotResponse\",\n    value: function sendBotResponse(text) {\n      var msg = {\n        _id: this.state.messages.length + 1,\n        text: text,\n        createdAt: new Date(),\n        user: BOT_USER\n      };\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, [msg])\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, React.createElement(GiftedChat, {\n        messages: this.state.messages,\n        onSend: function onSend(messages) {\n          return _this3.onSend(messages);\n        },\n        user: {\n          _id: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar _Dimensions$get = Dimensions.get('window'),\n    DEVICE_WIDTH = _Dimensions$get.width,\n    DEVICE_HEIGHT = _Dimensions$get.height;\n\nvar BACKGROUND_COLOR = '#FFFDE9';\nvar styles = StyleSheet.create({\n  emptyContainer: {\n    alignSelf: 'stretch',\n    backgroundColor: BACKGROUND_COLOR\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    backgroundColor: BACKGROUND_COLOR,\n    minHeight: DEVICE_HEIGHT,\n    maxHeight: DEVICE_HEIGHT\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/bonzi/Downloads/HackUST-2021/src/JustChat.js"],"names":["React","Component","GiftedChat","BOT_USER","_id","name","avatar","fetch","require","App","state","messages","text","createdAt","Date","user","maintext","counter","random_user_id","Math","floor","random","toString","result","sendBotResponse","query","count","method","headers","body","JSON","stringify","user_id","then","res","json","handleResponse","setState","previousState","append","message","text___","requestQuery","console","log","msg","length","flex","backgroundColor","onSend","Dimensions","get","DEVICE_WIDTH","width","DEVICE_HEIGHT","height","BACKGROUND_COLOR","styles","StyleSheet","create","emptyContainer","alignSelf","container","flexDirection","justifyContent","alignItems","minHeight","maxHeight"],"mappings":"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","sourcesContent":["import React, {\r\n    Component\r\n} from 'react';\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    View,\r\n    Dimensions,\r\n} from 'react-native';\r\nimport {\r\n    GiftedChat\r\n} from 'react-native-gifted-chat';\r\n\r\n\r\nconst BOT_USER = {\r\n    _id: 2,\r\n    name: 'Memo',\r\n    avatar: 'https://i.imgur.com/7k12EPD.png'\r\n};\r\n\r\nconst fetch = require('node-fetch');\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        messages: [{\r\n            _id: 1,\r\n            text: `Hi, I am Memo. I am your memory keeper in the Memory By Memory App. Please start by saying hi.`,\r\n            createdAt: new Date(),\r\n            user: BOT_USER\r\n        }] , maintext: \"testing\",\r\n    };\r\n\r\n    counter = 1;\r\n    random_user_id = Math.floor(Math.random() * 10000000000).toString();\r\n\r\n    componentDidMount() {\r\n        // Dialogflow_V2.setConfiguration(\r\n        //   dialogflowConfig.client_email,\r\n        //   dialogflowConfig.private_key,\r\n        //   Dialogflow_V2.LANG_ENGLISH_US,\r\n        //   dialogflowConfig.project_id\r\n        // );\r\n    };\r\n\r\n    handleResponse(result) {\r\n        let text = result;\r\n        this.sendBotResponse(text);\r\n        this.counter += 1;\r\n    };\r\n\r\n\r\n\r\n    requestQuery(query , count){;\r\n        fetch('http://23.21.182.147:8001/text/', {\r\n            method: 'post',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({user_id: this.random_user_id, count: count, text: query})\r\n        }).then(res => res.json())\r\n            .then(res => this.handleResponse(res));\r\n\r\n    };\r\n\r\n\r\n    onSend(messages = []) {\r\n        this.setState(previousState => ({\r\n            messages: GiftedChat.append(previousState.messages, messages)\r\n        }));\r\n\r\n        let message = messages[0].text;\r\n        // Dialogflow_V2.requestQuery(\r\n        //   message,\r\n        //   result => this.handleGoogleResponse(result),\r\n        //   error => console.log(error)\r\n        // );\r\n\r\n        var text___ = this.requestQuery(message, this.counter);\r\n        console.log(93);\r\n        console.log(text___);\r\n\r\n    }\r\n\r\n    sendBotResponse(text) {\r\n        let msg = {\r\n            _id: this.state.messages.length + 1,\r\n            text,\r\n            createdAt: new Date(),\r\n            user: BOT_USER\r\n        };\r\n\r\n        this.setState(previousState => ({\r\n            messages: GiftedChat.append(previousState.messages, [msg])\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <View style={{flex: 1,backgroundColor: '#fff'}} >\r\n                <GiftedChat messages = {this.state.messages} onSend = {messages => this.onSend(messages)}\r\n                            user={{ _id: 1 }} />\r\n            </View>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst { width: DEVICE_WIDTH, height: DEVICE_HEIGHT } = Dimensions.get('window');\r\nconst BACKGROUND_COLOR = '#FFFDE9';\r\n\r\nconst styles = StyleSheet.create({\r\n    emptyContainer: {\r\n        alignSelf: 'stretch',\r\n        backgroundColor: BACKGROUND_COLOR,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        alignSelf: 'stretch',\r\n        backgroundColor: BACKGROUND_COLOR,\r\n        minHeight: DEVICE_HEIGHT,\r\n        maxHeight: DEVICE_HEIGHT,\r\n    },\r\n});\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}