{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nvar _jsxFileName = \"/Users/matthewchuang/Documents/GitHub/HackUST-2021/src/JustTalk/JustTalk.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Slider } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NativeModule } from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { Asset } from 'expo-asset';\nimport { Audio } from 'expo-av';\nimport * as FileSystem from 'expo-file-system';\nimport * as Permissions from 'expo-permissions';\nimport { Dialogflow_V2 } from 'react-native-dialogflow';\nimport { dialogflowConfig } from \"./env\";\n\nvar Icon = function Icon(module, width, height) {\n  _classCallCheck(this, Icon);\n\n  this.module = module;\n  this.width = width;\n  this.height = height;\n  Asset.fromModule(this.module).downloadAsync();\n};\n\nvar ICON_RECORD_BUTTON = new Icon(require(\"./assets/images/record_button.png\"), 70, 119);\nvar ICON_RECORDING = new Icon(require(\"./assets/images/record_icon.png\"), 20, 14);\nvar ICON_PLAY_BUTTON = new Icon(require(\"./assets/images/play_button.png\"), 34, 51);\nvar ICON_PAUSE_BUTTON = new Icon(require(\"./assets/images/pause_button.png\"), 34, 51);\nvar ICON_STOP_BUTTON = new Icon(require(\"./assets/images/stop_button.png\"), 22, 22);\nvar ICON_MUTED_BUTTON = new Icon(require(\"./assets/images/muted_button.png\"), 67, 58);\nvar ICON_UNMUTED_BUTTON = new Icon(require(\"./assets/images/unmuted_button.png\"), 67, 58);\nvar ICON_TRACK_1 = new Icon(require(\"./assets/images/track_1.png\"), 166, 5);\nvar ICON_THUMB_1 = new Icon(require(\"./assets/images/thumb_1.png\"), 18, 19);\nvar ICON_THUMB_2 = new Icon(require(\"./assets/images/thumb_2.png\"), 15, 19);\n\nvar _Dimensions$get = Dimensions.get('window'),\n    DEVICE_WIDTH = _Dimensions$get.width,\n    DEVICE_HEIGHT = _Dimensions$get.height;\n\nvar BACKGROUND_COLOR = '#FFFFFF';\nvar LIVE_COLOR = '#FF0000';\nvar DISABLED_OPACITY = 0.5;\nvar RATE_SCALE = 3.0;\nvar BOT_USER = {\n  _id: 2,\n  name: 'FAQ Bot',\n  avatar: 'https://i.imgur.com/7k12EPD.png'\n};\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this._askForPermissions = function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.AUDIO_RECORDING));\n\n            case 2:\n              response = _context.sent;\n\n              _this.setState({\n                haveRecordingPermissions: response.status === 'granted'\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._updateScreenForSoundStatus = function (status) {\n      if (status.isLoaded) {\n        _this.setState({\n          soundDuration: status.durationMillis,\n          soundPosition: status.positionMillis,\n          shouldPlay: status.shouldPlay,\n          isPlaying: status.isPlaying,\n          rate: status.rate,\n          muted: status.isMuted,\n          volume: status.volume,\n          shouldCorrectPitch: status.shouldCorrectPitch,\n          isPlaybackAllowed: true\n        });\n      } else {\n        _this.setState({\n          soundDuration: null,\n          soundPosition: null,\n          isPlaybackAllowed: false\n        });\n\n        if (status.error) {\n          console.log(\"FATAL PLAYER ERROR: \" + status.error);\n        }\n      }\n    };\n\n    _this._updateScreenForRecordingStatus = function (status) {\n      if (status.canRecord) {\n        _this.setState({\n          isRecording: status.isRecording,\n          recordingDuration: status.durationMillis\n        });\n      } else if (status.isDoneRecording) {\n        _this.setState({\n          isRecording: false,\n          recordingDuration: status.durationMillis\n        });\n\n        if (!_this.state.isLoading) {\n          _this._stopRecordingAndEnablePlayback();\n        }\n      }\n    };\n\n    _this._onRecordPressed = function () {\n      if (_this.state.isRecording) {\n        _this._stopRecordingAndEnablePlayback();\n      } else {\n        _this._stopPlaybackAndBeginRecording();\n      }\n    };\n\n    _this._onPlayPausePressed = function () {\n      if (_this.sound != null) {\n        if (_this.state.isPlaying) {\n          _this.sound.pauseAsync();\n        } else {\n          _this.sound.playAsync();\n        }\n      }\n    };\n\n    _this._onStopPressed = function () {\n      if (_this.sound != null) {\n        _this.sound.stopAsync();\n      }\n    };\n\n    _this._onMutePressed = function () {\n      if (_this.sound != null) {\n        _this.sound.setIsMutedAsync(!_this.state.muted);\n      }\n    };\n\n    _this._onVolumeSliderValueChange = function (value) {\n      if (_this.sound != null) {\n        _this.sound.setVolumeAsync(value);\n      }\n    };\n\n    _this._trySetRate = function _callee2(rate, shouldCorrectPitch) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(_this.sound != null)) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(_this.sound.setRateAsync(rate, shouldCorrectPitch));\n\n            case 4:\n              _context2.next = 8;\n              break;\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](1);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 6]], Promise);\n    };\n\n    _this._onRateSliderSlidingComplete = function _callee3(value) {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this._trySetRate(value * RATE_SCALE, _this.state.shouldCorrectPitch);\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._onPitchCorrectionPressed = function _callee4(value) {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this._trySetRate(_this.state.rate, !_this.state.shouldCorrectPitch);\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._onSeekSliderValueChange = function (value) {\n      if (_this.sound != null && !_this.isSeeking) {\n        _this.isSeeking = true;\n        _this.shouldPlayAtEndOfSeek = _this.state.shouldPlay;\n\n        _this.sound.pauseAsync();\n      }\n    };\n\n    _this._onSeekSliderSlidingComplete = function _callee5(value) {\n      var seekPosition;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (_this.sound != null) {\n                _this.isSeeking = false;\n                seekPosition = value * _this.state.soundDuration;\n\n                if (_this.shouldPlayAtEndOfSeek) {\n                  _this.sound.playFromPositionAsync(seekPosition);\n                } else {\n                  _this.sound.setPositionAsync(seekPosition);\n                }\n              }\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.recording = null;\n    _this.sound = null;\n    _this.isSeeking = false;\n    _this.shouldPlayAtEndOfSeek = false;\n    _this.state = {\n      haveRecordingPermissions: false,\n      isLoading: false,\n      isPlaybackAllowed: false,\n      muted: false,\n      soundPosition: null,\n      soundDuration: null,\n      recordingDuration: null,\n      shouldPlay: false,\n      isPlaying: false,\n      isRecording: false,\n      shouldCorrectPitch: true,\n      volume: 1.0,\n      rate: 1.0,\n      messages: [{\n        _id: 1,\n        text: \"Hi! I am the FAQ bot \\uD83E\\uDD16 from Jscrambler.\\n\\nHow may I help you with today?\",\n        createdAt: new Date(),\n        user: BOT_USER\n      }]\n    };\n    _this.dialogflowInfo = {\n      projectId: \"grandpa-spsw\",\n      sessionId: 1,\n      queries: [\"I am sad\", \"i am happy\"],\n      languageCode: 'en'\n    };\n    _this.recordingSettings = JSON.parse(JSON.stringify(Audio.RECORDING_OPTIONS_PRESET_LOW_QUALITY));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._askForPermissions();\n\n      Dialogflow_V2.setConfiguration(dialogflowConfig.client_email, dialogflowConfig.private_key, Dialogflow_V2.LANG_ENGLISH_US, dialogflowConfig.project_id);\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var _this2 = this;\n\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      });\n      var message = messages[0].text;\n      Dialogflow_V2.requestQuery(message, function (result) {\n        return _this2.handleGoogleResponse(result);\n      }, function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"handleGoogleResponse\",\n    value: function handleGoogleResponse(result) {\n      var text = result.queryResult.fulfillmentMessages[0].text.text[0];\n      this.sendBotResponse(text);\n    }\n  }, {\n    key: \"sendBotResponse\",\n    value: function sendBotResponse(text) {\n      var msg = {\n        _id: this.state.messages.length + 1,\n        text: text,\n        createdAt: new Date(),\n        user: BOT_USER\n      };\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, [msg])\n        };\n      });\n    }\n  }, {\n    key: \"_stopPlaybackAndBeginRecording\",\n    value: function _stopPlaybackAndBeginRecording() {\n      var recording;\n      return _regeneratorRuntime.async(function _stopPlaybackAndBeginRecording$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              this.setState({\n                isLoading: true\n              });\n\n              if (!(this.sound !== null)) {\n                _context6.next = 6;\n                break;\n              }\n\n              _context6.next = 4;\n              return _regeneratorRuntime.awrap(this.sound.unloadAsync());\n\n            case 4:\n              this.sound.setOnPlaybackStatusUpdate(null);\n              this.sound = null;\n\n            case 6:\n              _context6.next = 8;\n              return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n                playsInSilentModeIOS: true,\n                shouldDuckAndroid: true,\n                interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n                playThroughEarpieceAndroid: false,\n                staysActiveInBackground: true\n              }));\n\n            case 8:\n              if (this.recording !== null) {\n                this.recording.setOnRecordingStatusUpdate(null);\n                this.recording = null;\n              }\n\n              recording = new Audio.Recording();\n              _context6.next = 12;\n              return _regeneratorRuntime.awrap(recording.prepareToRecordAsync(this.recordingSettings));\n\n            case 12:\n              recording.setOnRecordingStatusUpdate(this._updateScreenForRecordingStatus);\n              this.recording = recording;\n              _context6.next = 16;\n              return _regeneratorRuntime.awrap(this.recording.startAsync());\n\n            case 16:\n              this.setState({\n                isLoading: false\n              });\n\n            case 17:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_stopRecordingAndEnablePlayback\",\n    value: function _stopRecordingAndEnablePlayback() {\n      var info, _await$this$recording, sound, status;\n\n      return _regeneratorRuntime.async(function _stopRecordingAndEnablePlayback$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              this.setState({\n                isLoading: true\n              });\n              _context7.prev = 1;\n              _context7.next = 4;\n              return _regeneratorRuntime.awrap(this.recording.stopAndUnloadAsync());\n\n            case 4:\n              _context7.next = 8;\n              break;\n\n            case 6:\n              _context7.prev = 6;\n              _context7.t0 = _context7[\"catch\"](1);\n\n            case 8:\n              _context7.next = 10;\n              return _regeneratorRuntime.awrap(FileSystem.getInfoAsync(this.recording.getURI()));\n\n            case 10:\n              info = _context7.sent;\n              console.log(\"FILE INFO: \" + JSON.stringify(info));\n              _context7.next = 14;\n              return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n                allowsRecordingIOS: false,\n                interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n                playsInSilentModeIOS: true,\n                playsInSilentLockedModeIOS: true,\n                shouldDuckAndroid: true,\n                interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n                playThroughEarpieceAndroid: false,\n                staysActiveInBackground: true\n              }));\n\n            case 14:\n              _context7.next = 16;\n              return _regeneratorRuntime.awrap(this.recording.createNewLoadedSoundAsync({\n                isLooping: true,\n                isMuted: this.state.muted,\n                volume: this.state.volume,\n                rate: this.state.rate,\n                shouldCorrectPitch: this.state.shouldCorrectPitch\n              }, this._updateScreenForSoundStatus));\n\n            case 16:\n              _await$this$recording = _context7.sent;\n              sound = _await$this$recording.sound;\n              status = _await$this$recording.status;\n              this.sound = sound;\n              this.setState({\n                isLoading: false\n              });\n\n            case 21:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, [[1, 6]], Promise);\n    }\n  }, {\n    key: \"_getSeekSliderPosition\",\n    value: function _getSeekSliderPosition() {\n      if (this.sound != null && this.state.soundPosition != null && this.state.soundDuration != null) {\n        return this.state.soundPosition / this.state.soundDuration;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getMMSSFromMillis\",\n    value: function _getMMSSFromMillis(millis) {\n      var totalSeconds = millis / 1000;\n      var seconds = Math.floor(totalSeconds % 60);\n      var minutes = Math.floor(totalSeconds / 60);\n\n      var padWithZero = function padWithZero(number) {\n        var string = number.toString();\n\n        if (number < 10) {\n          return '0' + string;\n        }\n\n        return string;\n      };\n\n      return padWithZero(minutes) + ':' + padWithZero(seconds);\n    }\n  }, {\n    key: \"_getPlaybackTimestamp\",\n    value: function _getPlaybackTimestamp() {\n      if (this.sound != null && this.state.soundPosition != null && this.state.soundDuration != null) {\n        return this._getMMSSFromMillis(this.state.soundPosition) + \" / \" + this._getMMSSFromMillis(this.state.soundDuration);\n      }\n\n      return '';\n    }\n  }, {\n    key: \"_getRecordingTimestamp\",\n    value: function _getRecordingTimestamp() {\n      if (this.state.recordingDuration != null) {\n        return \"\" + this._getMMSSFromMillis(this.state.recordingDuration);\n      }\n\n      return \"\" + this._getMMSSFromMillis(0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (!this.state.haveRecordingPermissions) {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 21\n          }\n        }), React.createElement(Text, {\n          style: [styles.noPermissionsText],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 21\n          }\n        }, \"You must enable audio recording permissions in order to use this app.\"), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }\n      }, React.createElement(GiftedChat, {\n        messages: this.state.messages,\n        onSend: function onSend(messages) {\n          return _this3.onSend(messages);\n        },\n        user: {\n          _id: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  emptyContainer: {\n    alignSelf: 'stretch',\n    backgroundColor: BACKGROUND_COLOR\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    backgroundColor: BACKGROUND_COLOR,\n    minHeight: DEVICE_HEIGHT,\n    maxHeight: DEVICE_HEIGHT\n  },\n  noPermissionsText: {\n    textAlign: 'center'\n  },\n  wrapper: {},\n  halfScreenContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    minHeight: DEVICE_HEIGHT / 2.0,\n    maxHeight: DEVICE_HEIGHT / 2.0\n  },\n  recordingContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    minHeight: ICON_RECORD_BUTTON.height,\n    maxHeight: ICON_RECORD_BUTTON.height\n  },\n  recordingDataContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    minHeight: ICON_RECORD_BUTTON.height,\n    maxHeight: ICON_RECORD_BUTTON.height,\n    minWidth: ICON_RECORD_BUTTON.width * 3.0,\n    maxWidth: ICON_RECORD_BUTTON.width * 3.0\n  },\n  recordingDataRowContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    minHeight: ICON_RECORDING.height,\n    maxHeight: ICON_RECORDING.height\n  },\n  playbackContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    minHeight: ICON_THUMB_1.height * 2.0,\n    maxHeight: ICON_THUMB_1.height * 2.0\n  },\n  playbackSlider: {\n    alignSelf: 'stretch'\n  },\n  liveText: {\n    color: LIVE_COLOR\n  },\n  recordingTimestamp: {\n    paddingLeft: 20\n  },\n  playbackTimestamp: {\n    textAlign: 'right',\n    alignSelf: 'stretch',\n    paddingRight: 20\n  },\n  image: {\n    backgroundColor: BACKGROUND_COLOR\n  },\n  textButton: {\n    backgroundColor: BACKGROUND_COLOR,\n    padding: 10\n  },\n  buttonsContainerBase: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  buttonsContainerTopRow: {\n    maxHeight: ICON_MUTED_BUTTON.height,\n    alignSelf: 'stretch',\n    paddingRight: 20\n  },\n  playStopContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    minWidth: (ICON_PLAY_BUTTON.width + ICON_STOP_BUTTON.width) * 3.0 / 2.0,\n    maxWidth: (ICON_PLAY_BUTTON.width + ICON_STOP_BUTTON.width) * 3.0 / 2.0\n  },\n  volumeContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    minWidth: DEVICE_WIDTH / 2.0,\n    maxWidth: DEVICE_WIDTH / 2.0\n  },\n  volumeSlider: {\n    width: DEVICE_WIDTH / 2.0 - ICON_MUTED_BUTTON.width\n  },\n  buttonsContainerBottomRow: {\n    maxHeight: ICON_THUMB_1.height,\n    alignSelf: 'stretch',\n    paddingRight: 20,\n    paddingLeft: 20\n  },\n  rateSlider: {\n    width: DEVICE_WIDTH / 2.0\n  }\n});","map":{"version":3,"sources":["/Users/matthewchuang/Documents/GitHub/HackUST-2021/src/JustTalk/JustTalk.js"],"names":["React","Component","GiftedChat","Slider","NativeModule","Asset","Audio","FileSystem","Permissions","Dialogflow_V2","dialogflowConfig","Icon","module","width","height","fromModule","downloadAsync","ICON_RECORD_BUTTON","require","ICON_RECORDING","ICON_PLAY_BUTTON","ICON_PAUSE_BUTTON","ICON_STOP_BUTTON","ICON_MUTED_BUTTON","ICON_UNMUTED_BUTTON","ICON_TRACK_1","ICON_THUMB_1","ICON_THUMB_2","Dimensions","get","DEVICE_WIDTH","DEVICE_HEIGHT","BACKGROUND_COLOR","LIVE_COLOR","DISABLED_OPACITY","RATE_SCALE","BOT_USER","_id","name","avatar","App","props","_askForPermissions","askAsync","AUDIO_RECORDING","response","setState","haveRecordingPermissions","status","_updateScreenForSoundStatus","isLoaded","soundDuration","durationMillis","soundPosition","positionMillis","shouldPlay","isPlaying","rate","muted","isMuted","volume","shouldCorrectPitch","isPlaybackAllowed","error","console","log","_updateScreenForRecordingStatus","canRecord","isRecording","recordingDuration","isDoneRecording","state","isLoading","_stopRecordingAndEnablePlayback","_onRecordPressed","_stopPlaybackAndBeginRecording","_onPlayPausePressed","sound","pauseAsync","playAsync","_onStopPressed","stopAsync","_onMutePressed","setIsMutedAsync","_onVolumeSliderValueChange","value","setVolumeAsync","_trySetRate","setRateAsync","_onRateSliderSlidingComplete","_onPitchCorrectionPressed","_onSeekSliderValueChange","isSeeking","shouldPlayAtEndOfSeek","_onSeekSliderSlidingComplete","seekPosition","playFromPositionAsync","setPositionAsync","recording","messages","text","createdAt","Date","user","dialogflowInfo","projectId","sessionId","queries","languageCode","recordingSettings","JSON","parse","stringify","RECORDING_OPTIONS_PRESET_LOW_QUALITY","setConfiguration","client_email","private_key","LANG_ENGLISH_US","project_id","previousState","append","message","requestQuery","result","handleGoogleResponse","queryResult","fulfillmentMessages","sendBotResponse","msg","length","unloadAsync","setOnPlaybackStatusUpdate","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","shouldDuckAndroid","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DO_NOT_MIX","playThroughEarpieceAndroid","staysActiveInBackground","setOnRecordingStatusUpdate","Recording","prepareToRecordAsync","startAsync","stopAndUnloadAsync","getInfoAsync","getURI","info","playsInSilentLockedModeIOS","createNewLoadedSoundAsync","isLooping","millis","totalSeconds","seconds","Math","floor","minutes","padWithZero","number","string","toString","_getMMSSFromMillis","styles","container","noPermissionsText","flex","backgroundColor","onSend","StyleSheet","create","emptyContainer","alignSelf","flexDirection","justifyContent","alignItems","minHeight","maxHeight","textAlign","wrapper","halfScreenContainer","recordingContainer","recordingDataContainer","minWidth","maxWidth","recordingDataRowContainer","playbackContainer","playbackSlider","liveText","color","recordingTimestamp","paddingLeft","playbackTimestamp","paddingRight","image","textButton","padding","buttonsContainerBase","buttonsContainerTopRow","playStopContainer","volumeContainer","volumeSlider","buttonsContainerBottomRow","rateSlider"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport {\n    Dimensions,\n    Image,\n    Slider,\n    StyleSheet,\n    Text,\n    TouchableHighlight,\n    View,\n    NativeModule,\n    NativeModules\n\n} from 'react-native';\nimport { Asset } from 'expo-asset';\nimport { Audio } from 'expo-av';\nimport * as FileSystem from 'expo-file-system';\nimport * as Permissions from 'expo-permissions';\n\nimport { Dialogflow_V2 } from 'react-native-dialogflow';\nimport { dialogflowConfig } from './env';\nclass Icon {\n    constructor(module, width, height) {\n        this.module = module;\n        this.width = width;\n        this.height = height;\n        Asset.fromModule(this.module).downloadAsync();\n    }\n}\n\nconst ICON_RECORD_BUTTON = new Icon(require('./assets/images/record_button.png'), 70, 119);\nconst ICON_RECORDING = new Icon(require('./assets/images/record_icon.png'), 20, 14);\n\nconst ICON_PLAY_BUTTON = new Icon(require('./assets/images/play_button.png'), 34, 51);\nconst ICON_PAUSE_BUTTON = new Icon(require('./assets/images/pause_button.png'), 34, 51);\nconst ICON_STOP_BUTTON = new Icon(require('./assets/images/stop_button.png'), 22, 22);\n\nconst ICON_MUTED_BUTTON = new Icon(require('./assets/images/muted_button.png'), 67, 58);\nconst ICON_UNMUTED_BUTTON = new Icon(require('./assets/images/unmuted_button.png'), 67, 58);\n\nconst ICON_TRACK_1 = new Icon(require('./assets/images/track_1.png'), 166, 5);\nconst ICON_THUMB_1 = new Icon(require('./assets/images/thumb_1.png'), 18, 19);\nconst ICON_THUMB_2 = new Icon(require('./assets/images/thumb_2.png'), 15, 19);\n\nconst { width: DEVICE_WIDTH, height: DEVICE_HEIGHT } = Dimensions.get('window');\nconst BACKGROUND_COLOR = '#FFFFFF';\nconst LIVE_COLOR = '#FF0000';\nconst DISABLED_OPACITY = 0.5;\nconst RATE_SCALE = 3.0;\n\n\n\nconst BOT_USER = {\n    _id: 2,\n    name: 'FAQ Bot',\n    avatar: 'https://i.imgur.com/7k12EPD.png'\n  };\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.recording = null;\n        this.sound = null;\n        this.isSeeking = false;\n        this.shouldPlayAtEndOfSeek = false;\n        this.state = {\n            haveRecordingPermissions: false,\n            isLoading: false,\n            isPlaybackAllowed: false,\n            muted: false,\n            soundPosition: null,\n            soundDuration: null,\n            recordingDuration: null,\n            shouldPlay: false,\n            isPlaying: false,\n            isRecording: false,\n            shouldCorrectPitch: true,\n            volume: 1.0,\n            rate: 1.0,\n            messages: [\n                {\n                  _id: 1,\n                  text: `Hi! I am the FAQ bot 🤖 from Jscrambler.\\n\\nHow may I help you with today?`,\n                  createdAt: new Date(),\n                  user: BOT_USER // <= note this\n                }\n              ]\n        };\n        this.dialogflowInfo = {\n            projectId: \"grandpa-spsw\",\n            sessionId: 1,\n            queries: [\"I am sad\", \"i am happy\"],\n            languageCode: 'en',\n        };\n        this.recordingSettings = JSON.parse(JSON.stringify(Audio.RECORDING_OPTIONS_PRESET_LOW_QUALITY));\n        // // UNCOMMENT THIS TO TEST maxFileSize:\n        // this.recordingSettings.android['maxFileSize'] = 12000;\n    }\n\n    componentDidMount() {\n        this._askForPermissions();\n        Dialogflow_V2.setConfiguration(\n            dialogflowConfig.client_email,\n            dialogflowConfig.private_key,\n            Dialogflow_V2.LANG_ENGLISH_US,\n            dialogflowConfig.project_id\n          );\n    //    this._load_dialogflow();\n    }\n    \n    onSend(messages = []) {\n        this.setState(previousState => ({\n          messages: GiftedChat.append(previousState.messages, messages)\n        }));\n    \n        let message = messages[0].text;\n        Dialogflow_V2.requestQuery(\n          message,\n          result => this.handleGoogleResponse(result),\n          error => console.log(error)\n        );\n    }\n\n    handleGoogleResponse(result) {\n        let text = result.queryResult.fulfillmentMessages[0].text.text[0];\n        this.sendBotResponse(text);\n    }\n\n    sendBotResponse(text) {\n        let msg = {\n          _id: this.state.messages.length + 1,\n          text,\n          createdAt: new Date(),\n          user: BOT_USER\n        };\n    \n        this.setState(previousState => ({\n          messages: GiftedChat.append(previousState.messages, [msg])\n        }));\n      }\n    \n    // _load_dialogflow = async () => {\n    //     const client = await new APIClient({ grpc })\n    //     const sessionClient = await new dialogflow.SessionsClient();\n    // };\n\n    // _detectIntent = async (projectId, sessionId, query, contexts,languageCode) => {\n    //     const sessionPath = sessionClient.projectAgentSessionPath(\n    //         projectId,\n    //         sessionId\n    //       );\n        \n    //       // The text query request.\n    //       const request = {\n    //         session: sessionPath,\n    //         queryInput: {\n    //           text: {\n    //             text: query,\n    //             languageCode: languageCode,\n    //           },\n    //         },\n    //       };\n        \n    //       if (contexts && contexts.length > 0) {\n    //         request.queryParams = {\n    //           contexts: contexts,\n    //         };\n    //       }\n        \n    //       const responses = await sessionClient.detectIntent(request);\n    //       return responses[0];\n    // };\n\n    // _executeQueries = async (projectId, sessionId, queries, languageCode) => {\n    //     let context;\n    //     let intentResponse;\n    //     for (const query of queries) {\n    //         try {\n    //         console.log(`Sending Query: ${query}`);\n    //         intentResponse = await detectIntent(\n    //             projectId,\n    //             sessionId,\n    //             query,\n    //             context,\n    //             languageCode\n    //         );\n    //   console.log('Detected intent');\n    //   console.log(\n    //     `Fulfillment Text: ${intentResponse.queryResult.fulfillmentText}`\n    //         );\n    //         // Use the context from this response for next queries\n    //         context = intentResponse.queryResult.outputContexts;\n    //         } catch (error) {\n    //         console.log(error);\n    //         }\n    //     }\n\n    // }\n\n    _askForPermissions = async () => {\n        const response = await Permissions.askAsync(Permissions.AUDIO_RECORDING);\n        this.setState({\n            haveRecordingPermissions: response.status === 'granted',\n        });\n    };\n\n    _updateScreenForSoundStatus = status => {\n        if (status.isLoaded) {\n            this.setState({\n                soundDuration: status.durationMillis,\n                soundPosition: status.positionMillis,\n                shouldPlay: status.shouldPlay,\n                isPlaying: status.isPlaying,\n                rate: status.rate,\n                muted: status.isMuted,\n                volume: status.volume,\n                shouldCorrectPitch: status.shouldCorrectPitch,\n                isPlaybackAllowed: true,\n            });\n        } else {\n            this.setState({\n                soundDuration: null,\n                soundPosition: null,\n                isPlaybackAllowed: false,\n            });\n            if (status.error) {\n                console.log(`FATAL PLAYER ERROR: ${status.error}`);\n            }\n        }\n    };\n\n    _updateScreenForRecordingStatus = status => {\n        if (status.canRecord) {\n            this.setState({\n                isRecording: status.isRecording,\n                recordingDuration: status.durationMillis,\n            });\n        } else if (status.isDoneRecording) {\n            this.setState({\n                isRecording: false,\n                recordingDuration: status.durationMillis,\n            });\n            if (!this.state.isLoading) {\n                this._stopRecordingAndEnablePlayback();\n            }\n        }\n    };\n\n    async _stopPlaybackAndBeginRecording() {\n        this.setState({\n            isLoading: true,\n        });\n        if (this.sound !== null) {\n            await this.sound.unloadAsync();\n            this.sound.setOnPlaybackStatusUpdate(null);\n            this.sound = null;\n        }\n        await Audio.setAudioModeAsync({\n            allowsRecordingIOS: true,\n            interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n            playsInSilentModeIOS: true,\n            shouldDuckAndroid: true,\n            interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n            playThroughEarpieceAndroid: false,\n            staysActiveInBackground: true,\n        });\n        if (this.recording !== null) {\n            this.recording.setOnRecordingStatusUpdate(null);\n            this.recording = null;\n        }\n\n        const recording = new Audio.Recording();\n        await recording.prepareToRecordAsync(this.recordingSettings);\n        recording.setOnRecordingStatusUpdate(this._updateScreenForRecordingStatus);\n\n        this.recording = recording;\n        await this.recording.startAsync(); // Will call this._updateScreenForRecordingStatus to update the screen.\n        this.setState({\n            isLoading: false,\n        });\n    }\n\n    async _stopRecordingAndEnablePlayback() {\n        this.setState({\n            isLoading: true,\n        });\n        try {\n            await this.recording.stopAndUnloadAsync();\n        } catch (error) {\n            // Do nothing -- we are already unloaded.\n        }\n        const info = await FileSystem.getInfoAsync(this.recording.getURI());\n        console.log(`FILE INFO: ${JSON.stringify(info)}`);\n        await Audio.setAudioModeAsync({\n            allowsRecordingIOS: false,\n            interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n            playsInSilentModeIOS: true,\n            playsInSilentLockedModeIOS: true,\n            shouldDuckAndroid: true,\n            interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n            playThroughEarpieceAndroid: false,\n            staysActiveInBackground: true,\n        });\n        const { sound, status } = await this.recording.createNewLoadedSoundAsync(\n            {\n                isLooping: true,\n                isMuted: this.state.muted,\n                volume: this.state.volume,\n                rate: this.state.rate,\n                shouldCorrectPitch: this.state.shouldCorrectPitch,\n            },\n            this._updateScreenForSoundStatus\n        );\n        this.sound = sound;\n        this.setState({\n            isLoading: false,\n        });\n    }\n\n    _onRecordPressed = () => {\n        if (this.state.isRecording) {\n            this._stopRecordingAndEnablePlayback();\n        } else {\n            this._stopPlaybackAndBeginRecording();\n        }\n    };\n\n    _onPlayPausePressed = () => {\n        if (this.sound != null) {\n            if (this.state.isPlaying) {\n                this.sound.pauseAsync();\n            } else {\n                this.sound.playAsync();\n            }\n        }\n    };\n\n    _onStopPressed = () => {\n        if (this.sound != null) {\n            this.sound.stopAsync();\n        }\n    };\n\n    _onMutePressed = () => {\n        if (this.sound != null) {\n            this.sound.setIsMutedAsync(!this.state.muted);\n        }\n    };\n\n    _onVolumeSliderValueChange = value => {\n        if (this.sound != null) {\n            this.sound.setVolumeAsync(value);\n        }\n    };\n\n    _trySetRate = async (rate, shouldCorrectPitch) => {\n        if (this.sound != null) {\n            try {\n                await this.sound.setRateAsync(rate, shouldCorrectPitch);\n            } catch (error) {\n                // Rate changing could not be performed, possibly because the client's Android API is too old.\n            }\n        }\n    };\n\n    _onRateSliderSlidingComplete = async value => {\n        this._trySetRate(value * RATE_SCALE, this.state.shouldCorrectPitch);\n    };\n\n    _onPitchCorrectionPressed = async value => {\n        this._trySetRate(this.state.rate, !this.state.shouldCorrectPitch);\n    };\n\n    _onSeekSliderValueChange = value => {\n        if (this.sound != null && !this.isSeeking) {\n            this.isSeeking = true;\n            this.shouldPlayAtEndOfSeek = this.state.shouldPlay;\n            this.sound.pauseAsync();\n        }\n    };\n\n    _onSeekSliderSlidingComplete = async value => {\n        if (this.sound != null) {\n            this.isSeeking = false;\n            const seekPosition = value * this.state.soundDuration;\n            if (this.shouldPlayAtEndOfSeek) {\n                this.sound.playFromPositionAsync(seekPosition);\n            } else {\n                this.sound.setPositionAsync(seekPosition);\n            }\n        }\n    };\n\n    _getSeekSliderPosition() {\n        if (\n            this.sound != null &&\n            this.state.soundPosition != null &&\n            this.state.soundDuration != null\n        ) {\n            return this.state.soundPosition / this.state.soundDuration;\n        }\n        return 0;\n    }\n\n    _getMMSSFromMillis(millis) {\n        const totalSeconds = millis / 1000;\n        const seconds = Math.floor(totalSeconds % 60);\n        const minutes = Math.floor(totalSeconds / 60);\n\n        const padWithZero = number => {\n            const string = number.toString();\n            if (number < 10) {\n                return '0' + string;\n            }\n            return string;\n        };\n        return padWithZero(minutes) + ':' + padWithZero(seconds);\n    }\n\n    _getPlaybackTimestamp() {\n        if (\n            this.sound != null &&\n            this.state.soundPosition != null &&\n            this.state.soundDuration != null\n        ) {\n            return `${this._getMMSSFromMillis(this.state.soundPosition)} / ${this._getMMSSFromMillis(\n                this.state.soundDuration\n            )}`;\n        }\n        return '';\n    }\n\n    _getRecordingTimestamp() {\n        if (this.state.recordingDuration != null) {\n            return `${this._getMMSSFromMillis(this.state.recordingDuration)}`;\n        }\n        return `${this._getMMSSFromMillis(0)}`;\n    }\n\n    render() {\n        /*if(!this.state.fontLoaded) {\n            return (\n                <View style={styles.emptyContainer} />\n            )\n        }\n*/\n        if (!this.state.haveRecordingPermissions){\n            return (\n                <View style={styles.container}>\n                    <View />\n                    <Text style={[styles.noPermissionsText]}>\n                        You must enable audio recording permissions in order to use this app.\n                    </Text>\n                    <View />\n                </View>\n            )\n        }\n\n        return (\n            <View style={{ flex: 1, backgroundColor: '#fff' }}>\n        <GiftedChat\n          messages={this.state.messages}\n          onSend={messages => this.onSend(messages)}\n          user={{\n            _id: 1\n          }}\n        />\n      </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    emptyContainer: {\n        alignSelf: 'stretch',\n        backgroundColor: BACKGROUND_COLOR,\n    },\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        alignSelf: 'stretch',\n        backgroundColor: BACKGROUND_COLOR,\n        minHeight: DEVICE_HEIGHT,\n        maxHeight: DEVICE_HEIGHT,\n    },\n    noPermissionsText: {\n        textAlign: 'center',\n    },\n    wrapper: {},\n    halfScreenContainer: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        alignSelf: 'stretch',\n        minHeight: DEVICE_HEIGHT / 2.0,\n        maxHeight: DEVICE_HEIGHT / 2.0,\n    },\n    recordingContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        alignSelf: 'stretch',\n        minHeight: ICON_RECORD_BUTTON.height,\n        maxHeight: ICON_RECORD_BUTTON.height,\n    },\n    recordingDataContainer: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        minHeight: ICON_RECORD_BUTTON.height,\n        maxHeight: ICON_RECORD_BUTTON.height,\n        minWidth: ICON_RECORD_BUTTON.width * 3.0,\n        maxWidth: ICON_RECORD_BUTTON.width * 3.0,\n    },\n    recordingDataRowContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        minHeight: ICON_RECORDING.height,\n        maxHeight: ICON_RECORDING.height,\n    },\n    playbackContainer: {\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        alignSelf: 'stretch',\n        minHeight: ICON_THUMB_1.height * 2.0,\n        maxHeight: ICON_THUMB_1.height * 2.0,\n    },\n    playbackSlider: {\n        alignSelf: 'stretch',\n    },\n    liveText: {\n        color: LIVE_COLOR,\n    },\n    recordingTimestamp: {\n        paddingLeft: 20,\n    },\n    playbackTimestamp: {\n        textAlign: 'right',\n        alignSelf: 'stretch',\n        paddingRight: 20,\n    },\n    image: {\n        backgroundColor: BACKGROUND_COLOR,\n    },\n    textButton: {\n        backgroundColor: BACKGROUND_COLOR,\n        padding: 10,\n    },\n    buttonsContainerBase: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    buttonsContainerTopRow: {\n        maxHeight: ICON_MUTED_BUTTON.height,\n        alignSelf: 'stretch',\n        paddingRight: 20,\n    },\n    playStopContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        minWidth: (ICON_PLAY_BUTTON.width + ICON_STOP_BUTTON.width) * 3.0 / 2.0,\n        maxWidth: (ICON_PLAY_BUTTON.width + ICON_STOP_BUTTON.width) * 3.0 / 2.0,\n    },\n    volumeContainer: {\n        flex: 1,\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        minWidth: DEVICE_WIDTH / 2.0,\n        maxWidth: DEVICE_WIDTH / 2.0,\n    },\n    volumeSlider: {\n        width: DEVICE_WIDTH / 2.0 - ICON_MUTED_BUTTON.width,\n    },\n    buttonsContainerBottomRow: {\n        maxHeight: ICON_THUMB_1.height,\n        alignSelf: 'stretch',\n        paddingRight: 20,\n        paddingLeft: 20,\n    },\n    rateSlider: {\n        width: DEVICE_WIDTH / 2.0,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}