{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/matthewchuang/Documents/GitHub/HackUST-2021/src/Chart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { LineChart, BarChart, PieChart, ProgressChart, ContributionGraph } from 'react-native-chart-kit';\nimport * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport styles_default from \"./styles\";\n\nvar chart_data = require(\"./chart_data.json\");\n\nvar Chart = function (_React$Component) {\n  _inherits(Chart, _React$Component);\n\n  var _super = _createSuper(Chart);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _super.call(this, props);\n    _this.label = [];\n    _this.dataset = [];\n    var temp = [];\n    var i;\n\n    for (i = 1; i <= chart_data[0][\"count\"]; i++) {\n      _this.label.push(chart_data[i][\"Date\"]);\n\n      temp.push(chart_data[i][\"Sentiment_level\"]);\n    }\n\n    _this.dataset = [{\n      data: temp\n    }];\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, React.createElement(LineChart, {\n        data: {\n          labels: this.label,\n          datasets: this.dataset\n        },\n        width: Dimensions.get('window').width,\n        height: 220,\n        chartConfig: {\n          backgroundColor: '#e26a00',\n          backgroundGradientFrom: '#fb8c00',\n          backgroundGradientTo: '#ffa726',\n          decimalPlaces: 2,\n          color: function color() {\n            var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n            return \"rgba(255, 255, 255, \" + opacity + \")\";\n          },\n          style: {\n            borderRadius: 16\n          }\n        },\n        bezier: true,\n        style: {\n          marginVertical: 8,\n          borderRadius: 16\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Chart;\n}(React.Component);\n\nexport default Chart;","map":{"version":3,"sources":["/Users/matthewchuang/Documents/GitHub/HackUST-2021/src/Chart.js"],"names":["LineChart","BarChart","PieChart","ProgressChart","ContributionGraph","React","styles_default","chart_data","require","Chart","props","label","dataset","temp","i","push","data","labels","datasets","Dimensions","get","width","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","style","borderRadius","marginVertical","Component"],"mappings":";;;;;;;;;;;AAAA,SACIA,SADJ,EAEIC,QAFJ,EAGIC,QAHJ,EAIIC,aAJJ,EAKIC,iBALJ,QAMO,wBANP;AAOA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;;;AAEA,OAAOC,cAAP;;AACA,IAAIC,UAAU,GAAGC,OAAO,qBAAxB;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AACA,UAAKC,OAAL,GAAe,EAAf;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,IAAIP,UAAU,CAAC,CAAD,CAAV,CAAc,OAAd,CAAjB,EAAyCO,CAAC,EAA1C,EAA8C;AAC1C,YAAKH,KAAL,CAAWI,IAAX,CAAgBR,UAAU,CAACO,CAAD,CAAV,CAAc,MAAd,CAAhB;;AACAD,MAAAA,IAAI,CAACE,IAAL,CAAUR,UAAU,CAACO,CAAD,CAAV,CAAc,iBAAd,CAAV;AACH;;AACD,UAAKF,OAAL,GAAe,CAAC;AAACI,MAAAA,IAAI,EAACH;AAAN,KAAD,CAAf;AAVc;AAWjB;;;;WAED,kBAAS;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,IAAI,EAAE;AACFI,UAAAA,MAAM,EAAE,KAAKN,KADX;AAEFO,UAAAA,QAAQ,EAAE,KAAKN;AAFb,SADV;AAKI,QAAA,KAAK,EAAEO,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KALpC;AAMI,QAAA,MAAM,EAAE,GANZ;AAOI,QAAA,WAAW,EAAE;AACTC,UAAAA,eAAe,EAAE,SADR;AAETC,UAAAA,sBAAsB,EAAE,SAFf;AAGTC,UAAAA,oBAAoB,EAAE,SAHb;AAITC,UAAAA,aAAa,EAAE,CAJN;AAKTC,UAAAA,KAAK,EAAE;AAAA,gBAACC,OAAD,uEAAW,CAAX;AAAA,4CAAwCA,OAAxC;AAAA,WALE;AAMTC,UAAAA,KAAK,EAAE;AACHC,YAAAA,YAAY,EAAE;AADX;AANE,SAPjB;AAiBI,QAAA,MAAM,MAjBV;AAkBI,QAAA,KAAK,EAAE;AACHC,UAAAA,cAAc,EAAE,CADb;AAEHD,UAAAA,YAAY,EAAE;AAFX,SAlBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AA2BH;;;;EA1CexB,KAAK,CAAC0B,S;;AA6C1B,eAAetB,KAAf","sourcesContent":["import {\n    LineChart,\n    BarChart,\n    PieChart,\n    ProgressChart,\n    ContributionGraph\n} from 'react-native-chart-kit'\nimport * as React from 'react';\nimport {Button, View, Text, Dimensions} from 'react-native';\nimport styles_default from \"./styles\";\nvar chart_data = require('./chart_data.json')\n\nclass Chart extends React.Component{\n    constructor(props){\n        super(props);\n        this.label = []\n        this.dataset = []\n        let temp = []\n        let i;\n        for (i = 1; i <= chart_data[0][\"count\"]; i++) {\n            this.label.push(chart_data[i][\"Date\"])\n            temp.push(chart_data[i][\"Sentiment_level\"])\n        }\n        this.dataset = [{data:temp}];\n    }\n\n    render() {\n        return (\n            <View>\n                <LineChart\n                    data={{\n                        labels: this.label,\n                        datasets: this.dataset\n                    }}\n                    width={Dimensions.get('window').width} // from react-native\n                    height={220}\n                    chartConfig={{\n                        backgroundColor: '#e26a00',\n                        backgroundGradientFrom: '#fb8c00',\n                        backgroundGradientTo: '#ffa726',\n                        decimalPlaces: 2, // optional, defaults to 2dp\n                        color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                        style: {\n                            borderRadius: 16\n                        }\n                    }}\n                    bezier\n                    style={{\n                        marginVertical: 8,\n                        borderRadius: 16\n                    }}\n                />\n            </View>\n        );\n    }\n}\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}