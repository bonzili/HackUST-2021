{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/matthewchuang/Documents/GitHub/HackUST-2021/src/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport styles_default from \"./styles\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport JustTalk from \"./JustTalk/JustTalk\";\nimport TDML from \"./TDML\";\nimport SendAMessage from \"./SendAMessage\";\nimport Chart from \"./Chart\";\nimport Profile from \"./Profile/Profile\";\nimport HomeScreen from \"./Home\";\nimport * as Font from 'expo-font';\nimport Opening from \"./Opening\";\nimport EditProfile from \"./Profile/Edit Profile\";\n\nvar AcType = function (_React$Component) {\n  _inherits(AcType, _React$Component);\n\n  var _super = _createSuper(AcType);\n\n  function AcType(props) {\n    var _this;\n\n    _classCallCheck(this, AcType);\n\n    _this = _super.call(this, props);\n\n    _this._storedeafultData = function _callee() {\n      var value;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('child'));\n\n            case 3:\n              value = _context.sent;\n\n              if (!(value === null)) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('child', \"False\"));\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('profile', \"False\"));\n\n            case 9:\n              _context.next = 13;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    };\n\n    _this.state = {\n      fontLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(AcType, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                Quicksand: require(\"../assets/fonts/Quicksand-Regular.ttf\"),\n                QuicksandBold: require(\"../assets/fonts/Quicksand-Bold.ttf\"),\n                QuicksandMedium: require(\"../assets/fonts/Quicksand-Medium.ttf\"),\n                AbrilFatface: require(\"../assets/fonts/AbrilFatface.ttf\"),\n                ElsieSwashCaps: require(\"../assets/fonts/ElsieSwashCaps-Black.ttf\")\n              }));\n\n            case 3:\n              this.setState({\n                fontLoaded: true\n              });\n              _context2.next = 9;\n              break;\n\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 9:\n              _context2.prev = 9;\n\n              this._storedeafultData();\n\n              this.props.navigation.replace('Opening Page');\n              return _context2.finish(9);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[0, 6, 9, 13]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles_default.emptyContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return AcType;\n}(React.Component);\n\nvar Stack = createStackNavigator();\n\nfunction App() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Account Type\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: '#B01A1A'\n      },\n      headerTintColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      title: ''\n    },\n    name: \"Account Type\",\n    component: AcType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      title: ''\n    },\n    name: \"Home\",\n    component: HomeScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      title: ''\n    },\n    name: \"Just Talk\",\n    component: JustTalk,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      title: ''\n    },\n    name: \"Trip Down Memory Lane\",\n    component: TDML,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      title: ''\n    },\n    name: \"Send a Message\",\n    component: SendAMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      title: ''\n    },\n    name: \"Chart\",\n    component: Chart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      title: ''\n    },\n    name: \"Profile\",\n    component: Profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      title: ''\n    },\n    name: \"Edit Profile\",\n    component: EditProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false,\n      title: ''\n    },\n    name: \"Opening Page\",\n    component: Opening,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/matthewchuang/Documents/GitHub/HackUST-2021/src/App.js"],"names":["React","AsyncStorage","styles_default","NavigationContainer","createStackNavigator","JustTalk","TDML","SendAMessage","Chart","Profile","HomeScreen","Font","Opening","EditProfile","AcType","props","_storedeafultData","getItem","value","setItem","state","fontLoaded","loadAsync","Quicksand","require","QuicksandBold","QuicksandMedium","AbrilFatface","ElsieSwashCaps","setState","console","log","navigation","replace","emptyContainer","Component","Stack","App","headerStyle","backgroundColor","headerTintColor","title","headerShown"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React from 'react';\nimport { StyleSheet, Button, View, SafeAreaView, Text, Alert, AsyncStorage} from 'react-native'\nimport styles_default from \"./styles\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport JustTalk from \"./JustTalk/JustTalk\";\nimport TDML from \"./TDML\";\nimport SendAMessage from \"./SendAMessage\";\nimport Chart from \"./Chart\";\nimport Profile from \"./Profile/Profile\";\nimport HomeScreen from \"./Home\";\nimport * as Font from 'expo-font';\nimport Opening from \"./Opening\";\nimport EditProfile from \"./Profile/Edit Profile\";\n\nclass AcType extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            fontLoaded: false\n        }\n\n    }\n    async componentDidMount() {\n        try {\n            await Font.loadAsync({\n                Quicksand: require('../assets/fonts/Quicksand-Regular.ttf'),\n                QuicksandBold: require('../assets/fonts/Quicksand-Bold.ttf'),\n                QuicksandMedium: require('../assets/fonts/Quicksand-Medium.ttf'),\n                AbrilFatface: require('../assets/fonts/AbrilFatface.ttf'),\n                ElsieSwashCaps: require('../assets/fonts/ElsieSwashCaps-Black.ttf'),\n            })\n            this.setState({ fontLoaded: true })\n        } catch (error) {\n            console.log(error)\n        } finally {\n            this._storedeafultData();\n            this.props.navigation.replace('Opening Page');\n        }\n    }\n    _storedeafultData = async () => {\n        try {\n            const value = await AsyncStorage.getItem('child');\n            if (value === null){\n                await AsyncStorage.setItem(\n                    'child', \"False\"\n                );\n                await AsyncStorage.setItem(\n                    'profile', \"False\"\n                );\n            }\n        } catch (error) {\n            // Error saving data\n        }\n    };\n    render() {\n        return (\n            <View style={styles_default.emptyContainer}></View>\n        );\n\n    }\n\n    /*\n        _retrieveData = async () => {\n            try {\n                const value = await AsyncStorage.getItem('child');\n                if (value !== null) {\n                    if (value === \"True\"){\n                        this.props.navigation.replace('Opening Page');       //Account Type: Child\n                    }else if (value === \"False\"){\n                        this.props.navigation.replace('Opening Page')      //Account Type: Elderly\n                    };\n                    console.log(value);\n                }\n            } catch (error) {\n                // Error retrieving data\n            }\n        };\n\n        _storeData = async (actype) => {\n            try {\n                await AsyncStorage.setItem(\n                    'child', actype\n                );\n            } catch (error) {\n                // Error saving data\n            }\n        };\n\n        render() {\n            return (\n\n                <SafeAreaView style={styles_default.container}>\n                    <View style={styles_default.header}>\n                        <Text style={styles_default.title}>\n                            Login as:\n                        </Text>\n                    </View>\n                    <View style={styles_default.horizontal_container}>\n                        <View style={styles_default.buttonContainer}>\n                            <Button\n                                title=\"Child\"\n                                onPress={() => {this._storeData(\"True\"); this.props.navigation.replace('Home')}}\n                            />\n                        </View>\n                    </View>\n                    <View style={styles_default.horizontal_container}>\n                        <View style={styles_default.buttonContainer}>\n                            <Button\n                                title=\"Elderly\"\n                                onPress={() => {this._storeData(\"False\"); this.props.navigation.replace('Home')}}\n                            />\n                        </View>\n                    </View>\n                </SafeAreaView>\n\n\n            );\n\n        }\n\n     */\n}\n\nconst Stack = createStackNavigator();\n\nfunction App() {\n    return (\n        <NavigationContainer>\n            <Stack.Navigator initialRouteName=\"Account Type\"\n                             screenOptions={{headerStyle: {backgroundColor: '#B01A1A',}, headerTintColor: '#fff',}}>\n                <Stack.Screen options={{title: ''}} name= \"Account Type\" component={AcType} />\n                <Stack.Screen options={{title: ''}} name=\"Home\" component={HomeScreen} />\n                <Stack.Screen options={{title: ''}} name=\"Just Talk\" component={JustTalk} />\n                <Stack.Screen options={{title: ''}} name=\"Trip Down Memory Lane\" component={TDML} />\n                <Stack.Screen options={{title: ''}} name=\"Send a Message\" component={SendAMessage} />\n                <Stack.Screen options={{title: ''}} name=\"Chart\" component={Chart} />\n                <Stack.Screen options={{title: ''}} name=\"Profile\" component={Profile} />\n                <Stack.Screen options={{title: ''}} name=\"Edit Profile\" component={EditProfile} />\n                <Stack.Screen options={{headerShown: false,title:''}} name=\"Opening Page\" component={Opening} />\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}