{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nvar _jsxFileName = \"C:\\\\Users\\\\bonzi\\\\Downloads\\\\HackUST-2021\\\\src\\\\JustTalk\\\\JustTalk.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Asset } from 'expo-asset';\nimport { Audio } from 'expo-av';\nimport * as FileSystem from 'expo-file-system';\nimport * as Permissions from 'expo-permissions';\nimport * as Speech from 'expo-speech';\n\nvar Icon = function Icon(module, width, height) {\n  _classCallCheck(this, Icon);\n\n  this.module = module;\n  this.width = width;\n  this.height = height;\n  Asset.fromModule(this.module).downloadAsync();\n};\n\nvar ICON_RECORD_BUTTON = new Icon(require(\"./assets/images/record_button.png\"), 70, 119);\nvar ICON_RECORDING = new Icon(require(\"./assets/images/record_icon.png\"), 20, 14);\n\nvar _Dimensions$get = Dimensions.get('window'),\n    DEVICE_WIDTH = _Dimensions$get.width,\n    DEVICE_HEIGHT = _Dimensions$get.height;\n\nvar BACKGROUND_COLOR = '#fffde9';\nvar LIVE_COLOR = '#FF0000';\nvar DISABLED_OPACITY = 0.5;\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this._askForPermissions = function _callee() {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.AUDIO_RECORDING));\n\n            case 2:\n              response = _context.sent;\n\n              _this.setState({\n                haveRecordingPermissions: response.status === 'granted'\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._updateScreenForSoundStatus = function (status) {\n      if (status.isLoaded) {\n        _this.setState({\n          soundDuration: status.durationMillis,\n          soundPosition: status.positionMillis,\n          shouldPlay: status.shouldPlay,\n          isPlaying: status.isPlaying,\n          rate: status.rate,\n          muted: status.isMuted,\n          volume: status.volume,\n          shouldCorrectPitch: status.shouldCorrectPitch,\n          isPlaybackAllowed: true\n        });\n      } else {\n        _this.setState({\n          soundDuration: null,\n          soundPosition: null,\n          isPlaybackAllowed: false\n        });\n\n        if (status.error) {\n          console.log(\"FATAL PLAYER ERROR: \" + status.error);\n        }\n      }\n    };\n\n    _this._updateScreenForRecordingStatus = function (status) {\n      if (status.canRecord) {\n        _this.setState({\n          isRecording: status.isRecording,\n          recordingDuration: status.durationMillis\n        });\n      } else if (status.isDoneRecording) {\n        _this.setState({\n          isRecording: false,\n          recordingDuration: status.durationMillis\n        });\n\n        if (!_this.state.isLoading) {\n          _this._stopRecordingAndEnablePlayback();\n        }\n      }\n    };\n\n    _this.listVoices = function _callee2() {\n      var voices;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Speech.getAvailableVoicesAsync());\n\n            case 2:\n              voices = _context2.sent;\n              console.log('Voices:', voices);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._onRecordPressed = function () {\n      if (_this.state.isRecording) {\n        _this._stopRecordingAndEnablePlayback();\n      } else {\n        _this._stopPlaybackAndBeginRecording();\n      }\n    };\n\n    _this.recording = null;\n    _this.sound = null;\n    _this.state = {\n      haveRecordingPermissions: false,\n      isLoading: false,\n      isPlaybackAllowed: false,\n      muted: false,\n      soundPosition: null,\n      soundDuration: null,\n      recordingDuration: null,\n      shouldPlay: false,\n      isPlaying: false,\n      isRecording: false,\n      shouldCorrectPitch: true,\n      volume: 1.0,\n      rate: 1.0\n    };\n    _this.recordingSettings = JSON.parse(JSON.stringify(Audio.RECORDING_OPTIONS_PRESET_LOW_QUALITY));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._askForPermissions();\n    }\n  }, {\n    key: \"_stopPlaybackAndBeginRecording\",\n    value: function _stopPlaybackAndBeginRecording() {\n      var recording;\n      return _regeneratorRuntime.async(function _stopPlaybackAndBeginRecording$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              this.setState({\n                isLoading: true\n              });\n\n              if (!(this.sound !== null)) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(this.sound.unloadAsync());\n\n            case 4:\n              this.sound.setOnPlaybackStatusUpdate(null);\n              this.sound = null;\n\n            case 6:\n              _context3.next = 8;\n              return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n                allowsRecordingIOS: true,\n                interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n                playsInSilentModeIOS: true,\n                shouldDuckAndroid: true,\n                interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n                playThroughEarpieceAndroid: false,\n                staysActiveInBackground: true\n              }));\n\n            case 8:\n              if (this.recording !== null) {\n                this.recording.setOnRecordingStatusUpdate(null);\n                this.recording = null;\n              }\n\n              recording = new Audio.Recording();\n              _context3.next = 12;\n              return _regeneratorRuntime.awrap(recording.prepareToRecordAsync(this.recordingSettings));\n\n            case 12:\n              recording.setOnRecordingStatusUpdate(this._updateScreenForRecordingStatus);\n              this.recording = recording;\n              _context3.next = 16;\n              return _regeneratorRuntime.awrap(this.recording.startAsync());\n\n            case 16:\n              this.setState({\n                isLoading: false\n              });\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"_stopRecordingAndEnablePlayback\",\n    value: function _stopRecordingAndEnablePlayback() {\n      var info, _await$this$recording, sound, status;\n\n      return _regeneratorRuntime.async(function _stopRecordingAndEnablePlayback$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              this.setState({\n                isLoading: true\n              });\n              _context4.prev = 1;\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(this.recording.stopAndUnloadAsync());\n\n            case 4:\n              _context4.next = 8;\n              break;\n\n            case 6:\n              _context4.prev = 6;\n              _context4.t0 = _context4[\"catch\"](1);\n\n            case 8:\n              _context4.next = 10;\n              return _regeneratorRuntime.awrap(FileSystem.getInfoAsync(this.recording.getURI()));\n\n            case 10:\n              info = _context4.sent;\n              console.log(\"FILE INFO: \" + JSON.stringify(info));\n              _context4.next = 14;\n              return _regeneratorRuntime.awrap(Audio.setAudioModeAsync({\n                allowsRecordingIOS: false,\n                interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n                playsInSilentModeIOS: true,\n                playsInSilentLockedModeIOS: true,\n                shouldDuckAndroid: true,\n                interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\n                playThroughEarpieceAndroid: false,\n                staysActiveInBackground: true\n              }));\n\n            case 14:\n              _context4.next = 16;\n              return _regeneratorRuntime.awrap(this.recording.createNewLoadedSoundAsync({\n                isLooping: true,\n                isMuted: this.state.muted,\n                volume: this.state.volume,\n                rate: this.state.rate,\n                shouldCorrectPitch: this.state.shouldCorrectPitch\n              }, this._updateScreenForSoundStatus));\n\n            case 16:\n              _await$this$recording = _context4.sent;\n              sound = _await$this$recording.sound;\n              status = _await$this$recording.status;\n              this.sound = sound;\n              this.setState({\n                isLoading: false\n              });\n\n            case 21:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, [[1, 6]], Promise);\n    }\n  }, {\n    key: \"_getMMSSFromMillis\",\n    value: function _getMMSSFromMillis(millis) {\n      var totalSeconds = millis / 1000;\n      var seconds = Math.floor(totalSeconds % 60);\n      var minutes = Math.floor(totalSeconds / 60);\n\n      var padWithZero = function padWithZero(number) {\n        var string = number.toString();\n\n        if (number < 10) {\n          return '0' + string;\n        }\n\n        return string;\n      };\n\n      return padWithZero(minutes) + ':' + padWithZero(seconds);\n    }\n  }, {\n    key: \"_getRecordingTimestamp\",\n    value: function _getRecordingTimestamp() {\n      if (this.state.recordingDuration != null) {\n        return \"\" + this._getMMSSFromMillis(this.state.recordingDuration);\n      }\n\n      return \"\" + this._getMMSSFromMillis(0);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.haveRecordingPermissions) {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }\n        }), React.createElement(Text, {\n          style: [styles.noPermissionsText],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }\n        }, \"You must enable audio recording permissions in order to use this app.\"), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: [styles.halfScreenContainer, {\n          opacity: this.state.isLoading ? DISABLED_OPACITY : 1.0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }), React.createElement(View, {\n        style: styles.recordingContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }\n      }), React.createElement(TouchableHighlight, {\n        underlayColor: BACKGROUND_COLOR,\n        style: styles.wrapper,\n        onPress: this._onRecordPressed,\n        disabled: this.state.isLoading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: ICON_RECORD_BUTTON.module,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        style: styles.recordingDataContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }\n      }), React.createElement(Text, {\n        style: [styles.liveText],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 29\n        }\n      }, this.state.isRecording ? 'Recording' : ''), React.createElement(View, {\n        style: styles.recordingDataRowContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        style: [styles.image, {\n          opacity: this.state.isRecording ? 1.0 : 0.0\n        }],\n        source: ICON_RECORDING.module,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: [styles.recordingTimestamp],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 33\n        }\n      }, this._getRecordingTimestamp())), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 29\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  emptyContainer: {\n    alignSelf: 'stretch',\n    backgroundColor: BACKGROUND_COLOR\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    backgroundColor: BACKGROUND_COLOR,\n    minHeight: DEVICE_HEIGHT,\n    maxHeight: DEVICE_HEIGHT\n  },\n  noPermissionsText: {\n    textAlign: 'center'\n  },\n  wrapper: {},\n  halfScreenContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    minHeight: DEVICE_HEIGHT / 2.0,\n    maxHeight: DEVICE_HEIGHT / 2.0\n  },\n  recordingContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    alignSelf: 'stretch',\n    minHeight: ICON_RECORD_BUTTON.height,\n    maxHeight: ICON_RECORD_BUTTON.height\n  },\n  recordingDataContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    minHeight: ICON_RECORD_BUTTON.height,\n    maxHeight: ICON_RECORD_BUTTON.height,\n    minWidth: ICON_RECORD_BUTTON.width * 3.0,\n    maxWidth: ICON_RECORD_BUTTON.width * 3.0\n  },\n  recordingDataRowContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    minHeight: ICON_RECORDING.height,\n    maxHeight: ICON_RECORDING.height\n  },\n  liveText: {\n    color: LIVE_COLOR\n  },\n  recordingTimestamp: {\n    paddingLeft: 20\n  },\n  playbackTimestamp: {\n    textAlign: 'right',\n    alignSelf: 'stretch',\n    paddingRight: 20\n  },\n  image: {\n    backgroundColor: BACKGROUND_COLOR\n  },\n  textButton: {\n    backgroundColor: BACKGROUND_COLOR,\n    padding: 10\n  },\n  buttonsContainerBase: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"sources":["C:/Users/bonzi/Downloads/HackUST-2021/src/JustTalk/JustTalk.js"],"names":["React","Asset","Audio","FileSystem","Permissions","Speech","Icon","module","width","height","fromModule","downloadAsync","ICON_RECORD_BUTTON","require","ICON_RECORDING","Dimensions","get","DEVICE_WIDTH","DEVICE_HEIGHT","BACKGROUND_COLOR","LIVE_COLOR","DISABLED_OPACITY","App","props","_askForPermissions","askAsync","AUDIO_RECORDING","response","setState","haveRecordingPermissions","status","_updateScreenForSoundStatus","isLoaded","soundDuration","durationMillis","soundPosition","positionMillis","shouldPlay","isPlaying","rate","muted","isMuted","volume","shouldCorrectPitch","isPlaybackAllowed","error","console","log","_updateScreenForRecordingStatus","canRecord","isRecording","recordingDuration","isDoneRecording","state","isLoading","_stopRecordingAndEnablePlayback","listVoices","getAvailableVoicesAsync","voices","_onRecordPressed","_stopPlaybackAndBeginRecording","recording","sound","recordingSettings","JSON","parse","stringify","RECORDING_OPTIONS_PRESET_LOW_QUALITY","unloadAsync","setOnPlaybackStatusUpdate","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","shouldDuckAndroid","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DO_NOT_MIX","playThroughEarpieceAndroid","staysActiveInBackground","setOnRecordingStatusUpdate","Recording","prepareToRecordAsync","startAsync","stopAndUnloadAsync","getInfoAsync","getURI","info","playsInSilentLockedModeIOS","createNewLoadedSoundAsync","isLooping","millis","totalSeconds","seconds","Math","floor","minutes","padWithZero","number","string","toString","_getMMSSFromMillis","styles","container","noPermissionsText","halfScreenContainer","opacity","recordingContainer","wrapper","image","recordingDataContainer","liveText","recordingDataRowContainer","recordingTimestamp","_getRecordingTimestamp","Component","StyleSheet","create","emptyContainer","alignSelf","backgroundColor","flex","flexDirection","justifyContent","alignItems","minHeight","maxHeight","textAlign","minWidth","maxWidth","color","paddingLeft","playbackTimestamp","paddingRight","textButton","padding","buttonsContainerBase"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Dimensions,\r\n    Image,\r\n    StyleSheet,\r\n    Text,\r\n    TouchableHighlight,\r\n    View,\r\n} from 'react-native';\r\nimport { Asset } from 'expo-asset';\r\nimport { Audio } from 'expo-av';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as Permissions from 'expo-permissions';\r\nimport * as Speech from 'expo-speech'\r\n\r\nclass Icon {\r\n    constructor(module, width, height) {\r\n        this.module = module;\r\n        this.width = width;\r\n        this.height = height;\r\n        Asset.fromModule(this.module).downloadAsync();\r\n    }\r\n}\r\n\r\nconst ICON_RECORD_BUTTON = new Icon(require('./assets/images/record_button.png'), 70, 119);\r\nconst ICON_RECORDING = new Icon(require('./assets/images/record_icon.png'), 20, 14);\r\n\r\n\r\nconst { width: DEVICE_WIDTH, height: DEVICE_HEIGHT } = Dimensions.get('window');\r\nconst BACKGROUND_COLOR = '#fffde9';\r\nconst LIVE_COLOR = '#FF0000';\r\nconst DISABLED_OPACITY = 0.5;\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.recording = null;\r\n        this.sound = null;\r\n\r\n        this.state = {\r\n            haveRecordingPermissions: false,\r\n            isLoading: false,\r\n            isPlaybackAllowed: false,\r\n            muted: false,\r\n            soundPosition: null,\r\n            soundDuration: null,\r\n            recordingDuration: null,\r\n            shouldPlay: false,\r\n            isPlaying: false,\r\n            isRecording: false,\r\n            shouldCorrectPitch: true,\r\n            volume: 1.0,\r\n            rate: 1.0,\r\n        };\r\n        this.recordingSettings = JSON.parse(JSON.stringify(Audio.RECORDING_OPTIONS_PRESET_LOW_QUALITY));\r\n        // // UNCOMMENT THIS TO TEST maxFileSize:\r\n        // this.recordingSettings.android['maxFileSize'] = 12000;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._askForPermissions();\r\n    }\r\n\r\n    _askForPermissions = async () => {\r\n        const response = await Permissions.askAsync(Permissions.AUDIO_RECORDING);\r\n        this.setState({\r\n            haveRecordingPermissions: response.status === 'granted',\r\n        });\r\n    };\r\n\r\n    _updateScreenForSoundStatus = status => {\r\n        if (status.isLoaded) {\r\n            this.setState({\r\n                soundDuration: status.durationMillis,\r\n                soundPosition: status.positionMillis,\r\n                shouldPlay: status.shouldPlay,\r\n                isPlaying: status.isPlaying,\r\n                rate: status.rate,\r\n                muted: status.isMuted,\r\n                volume: status.volume,\r\n                shouldCorrectPitch: status.shouldCorrectPitch,\r\n                isPlaybackAllowed: true,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                soundDuration: null,\r\n                soundPosition: null,\r\n                isPlaybackAllowed: false,\r\n            });\r\n            if (status.error) {\r\n                console.log(`FATAL PLAYER ERROR: ${status.error}`);\r\n            }\r\n        }\r\n    };\r\n\r\n    _updateScreenForRecordingStatus = status => {\r\n        if (status.canRecord) {\r\n            this.setState({\r\n                isRecording: status.isRecording,\r\n                recordingDuration: status.durationMillis,\r\n            });\r\n        } else if (status.isDoneRecording) {\r\n            this.setState({\r\n                isRecording: false,\r\n                recordingDuration: status.durationMillis,\r\n            });\r\n            if (!this.state.isLoading) {\r\n                this._stopRecordingAndEnablePlayback();\r\n            }\r\n        }\r\n    };\r\n\r\n    async _stopPlaybackAndBeginRecording() {\r\n        this.setState({\r\n            isLoading: true,\r\n        });\r\n        if (this.sound !== null) {\r\n            await this.sound.unloadAsync();\r\n            this.sound.setOnPlaybackStatusUpdate(null);\r\n            this.sound = null;\r\n        }\r\n        await Audio.setAudioModeAsync({\r\n            allowsRecordingIOS: true,\r\n            interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\r\n            playsInSilentModeIOS: true,\r\n            shouldDuckAndroid: true,\r\n            interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\r\n            playThroughEarpieceAndroid: false,\r\n            staysActiveInBackground: true,\r\n        });\r\n        if (this.recording !== null) {\r\n            this.recording.setOnRecordingStatusUpdate(null);\r\n            this.recording = null;\r\n        }\r\n\r\n        const recording = new Audio.Recording();\r\n        await recording.prepareToRecordAsync(this.recordingSettings);\r\n        recording.setOnRecordingStatusUpdate(this._updateScreenForRecordingStatus);\r\n\r\n        this.recording = recording;\r\n        await this.recording.startAsync(); // Will call this._updateScreenForRecordingStatus to update the screen.\r\n        this.setState({\r\n            isLoading: false,\r\n        });\r\n    }\r\n\r\n    async _stopRecordingAndEnablePlayback() {\r\n        this.setState({\r\n            isLoading: true,\r\n        });\r\n        try {\r\n            await this.recording.stopAndUnloadAsync();\r\n        } catch (error) {\r\n            // Do nothing -- we are already unloaded.\r\n        }\r\n        const info = await FileSystem.getInfoAsync(this.recording.getURI());\r\n        console.log(`FILE INFO: ${JSON.stringify(info)}`);\r\n        await Audio.setAudioModeAsync({\r\n            allowsRecordingIOS: false,\r\n            interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\r\n            playsInSilentModeIOS: true,\r\n            playsInSilentLockedModeIOS: true,\r\n            shouldDuckAndroid: true,\r\n            interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DO_NOT_MIX,\r\n            playThroughEarpieceAndroid: false,\r\n            staysActiveInBackground: true,\r\n        });\r\n        const { sound, status } = await this.recording.createNewLoadedSoundAsync(\r\n            {\r\n                isLooping: true,\r\n                isMuted: this.state.muted,\r\n                volume: this.state.volume,\r\n                rate: this.state.rate,\r\n                shouldCorrectPitch: this.state.shouldCorrectPitch,\r\n            },\r\n            this._updateScreenForSoundStatus\r\n        );\r\n        this.sound = sound;\r\n        this.setState({\r\n            isLoading: false,\r\n        });\r\n    }\r\n\r\n    listVoices = async() => {\r\n        let voices = await Speech.getAvailableVoicesAsync()\r\n        console.log('Voices:', voices)\r\n    }\r\n\r\n    _onRecordPressed = () => {\r\n        //Speech.speak('Hello How Are You',{language:'en-US'})\r\n\r\n        if (this.state.isRecording) {\r\n            this._stopRecordingAndEnablePlayback();\r\n        } else {\r\n            this._stopPlaybackAndBeginRecording();\r\n        }\r\n    };\r\n\r\n    _getMMSSFromMillis(millis) {\r\n        const totalSeconds = millis / 1000;\r\n        const seconds = Math.floor(totalSeconds % 60);\r\n        const minutes = Math.floor(totalSeconds / 60);\r\n\r\n        const padWithZero = number => {\r\n            const string = number.toString();\r\n            if (number < 10) {\r\n                return '0' + string;\r\n            }\r\n            return string;\r\n        };\r\n        return padWithZero(minutes) + ':' + padWithZero(seconds);\r\n    }\r\n\r\n\r\n    _getRecordingTimestamp() {\r\n        if (this.state.recordingDuration != null) {\r\n            return `${this._getMMSSFromMillis(this.state.recordingDuration)}`;\r\n        }\r\n        return `${this._getMMSSFromMillis(0)}`;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.haveRecordingPermissions){\r\n            return (\r\n                <View style={styles.container}>\r\n                    <View />\r\n                    <Text style={[styles.noPermissionsText]}>\r\n                        You must enable audio recording permissions in order to use this app.\r\n                    </Text>\r\n                    <View />\r\n                </View>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n                <View\r\n                    style={[\r\n                        styles.halfScreenContainer,\r\n                        {\r\n                            opacity: this.state.isLoading ? DISABLED_OPACITY : 1.0,\r\n                        },\r\n                    ]}>\r\n                    <View />\r\n                    <View style={styles.recordingContainer}>\r\n                        <View />\r\n                        <TouchableHighlight\r\n                            underlayColor={BACKGROUND_COLOR}\r\n                            style={styles.wrapper}\r\n                            onPress={this._onRecordPressed}\r\n                            disabled={this.state.isLoading}>\r\n                            <Image style={styles.image} source={ICON_RECORD_BUTTON.module} />\r\n                        </TouchableHighlight>\r\n                        <View style={styles.recordingDataContainer}>\r\n                            <View />\r\n                            <Text style={[styles.liveText]}>\r\n                                {this.state.isRecording ? 'Recording' : ''}\r\n                            </Text>\r\n                            <View style={styles.recordingDataRowContainer}>\r\n                                <Image\r\n                                    style={[styles.image, { opacity: this.state.isRecording ? 1.0 : 0.0 }]}\r\n                                    source={ICON_RECORDING.module}\r\n                                />\r\n                                <Text style={[styles.recordingTimestamp]}>\r\n                                    {this._getRecordingTimestamp()}\r\n                                </Text>\r\n                            </View>\r\n                            <View />\r\n                        </View>\r\n                        <View />\r\n                    </View>\r\n                    <View />\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    emptyContainer: {\r\n        alignSelf: 'stretch',\r\n        backgroundColor: BACKGROUND_COLOR,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        alignSelf: 'stretch',\r\n        backgroundColor: BACKGROUND_COLOR,\r\n        minHeight: DEVICE_HEIGHT,\r\n        maxHeight: DEVICE_HEIGHT,\r\n    },\r\n    noPermissionsText: {\r\n        textAlign: 'center',\r\n    },\r\n    wrapper: {},\r\n    halfScreenContainer: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        alignSelf: 'stretch',\r\n        minHeight: DEVICE_HEIGHT / 2.0,\r\n        maxHeight: DEVICE_HEIGHT / 2.0,\r\n    },\r\n    recordingContainer: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        alignSelf: 'stretch',\r\n        minHeight: ICON_RECORD_BUTTON.height,\r\n        maxHeight: ICON_RECORD_BUTTON.height,\r\n    },\r\n    recordingDataContainer: {\r\n        flex: 1,\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        minHeight: ICON_RECORD_BUTTON.height,\r\n        maxHeight: ICON_RECORD_BUTTON.height,\r\n        minWidth: ICON_RECORD_BUTTON.width * 3.0,\r\n        maxWidth: ICON_RECORD_BUTTON.width * 3.0,\r\n    },\r\n    recordingDataRowContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        minHeight: ICON_RECORDING.height,\r\n        maxHeight: ICON_RECORDING.height,\r\n    },\r\n\r\n    liveText: {\r\n        color: LIVE_COLOR,\r\n    },\r\n    recordingTimestamp: {\r\n        paddingLeft: 20,\r\n    },\r\n    playbackTimestamp: {\r\n        textAlign: 'right',\r\n        alignSelf: 'stretch',\r\n        paddingRight: 20,\r\n    },\r\n    image: {\r\n        backgroundColor: BACKGROUND_COLOR,\r\n    },\r\n    textButton: {\r\n        backgroundColor: BACKGROUND_COLOR,\r\n        padding: 10,\r\n    },\r\n    buttonsContainerBase: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n    },\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}